<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.red.tube.MyService dummyMainMethod_com_red_tube_MyService(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.red.tube.DeviceAdminReceiver dummyMainMethod_com_red_tube_DeviceAdminReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.red.tube.BootBroadcastReceiver dummyMainMethod_com_red_tube_BootBroadcastReceiver(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.red.tube.SmsHandler dummyMainMethod_com_red_tube_SmsHandler(android.content.Intent)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <dummyMainClass: com.red.tube.AnfortActivity dummyMainMethod_com_red_tube_AnfortActivity(android.content.Intent)>
<dummyMainClass: com.red.tube.MyService dummyMainMethod_com_red_tube_MyService(android.content.Intent)> -> <com.red.tube.MyService: void <clinit>()>
<dummyMainClass: com.red.tube.DeviceAdminReceiver dummyMainMethod_com_red_tube_DeviceAdminReceiver(android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: void <clinit>()>
<dummyMainClass: com.red.tube.SmsHandler dummyMainMethod_com_red_tube_SmsHandler(android.content.Intent)> -> <com.red.tube.SmsHandler: void <clinit>()>
<dummyMainClass: com.red.tube.AnfortActivity dummyMainMethod_com_red_tube_AnfortActivity(android.content.Intent)> -> <com.red.tube.AnfortActivity: void <init>()>
<dummyMainClass: com.red.tube.AnfortActivity dummyMainMethod_com_red_tube_AnfortActivity(android.content.Intent)> -> <com.red.tube.AnfortActivity: void onCreate(android.os.Bundle)>
<dummyMainClass: com.red.tube.AnfortActivity dummyMainMethod_com_red_tube_AnfortActivity(android.content.Intent)> -> <com.red.tube.AnfortActivity: void onActivityResult(int,int,android.content.Intent)>
<com.red.tube.AnfortActivity: void onActivityResult(int,int,android.content.Intent)> -> <com.red.tube.AnfortActivity: android.content.Intent getIntent()>
<com.red.tube.AnfortActivity: void onActivityResult(int,int,android.content.Intent)> -> <com.red.tube.AnfortActivity: void a()>
<com.red.tube.AnfortActivity: void onCreate(android.os.Bundle)> -> <com.red.tube.b: void <init>(com.red.tube.AnfortActivity)>
<com.red.tube.b: void <init>(com.red.tube.AnfortActivity)> -> <java.lang.Object: void <init>()>
<java.lang.Object: void <init>()> -> <java.lang.Object: void finalize()>
<java.lang.Object: void finalize()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.RuntimeException: void <init>(java.lang.String)> -> <java.lang.Exception: void <init>()>
<java.lang.Exception: void <init>()> -> <java.lang.Throwable: void <init>()>
<java.lang.Object: void <init>()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.AnfortActivity: void onCreate(android.os.Bundle)> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.red.tube.AnfortActivity: void onCreate(android.os.Bundle)> -> <java.lang.Thread: void start()>
<com.red.tube.AnfortActivity: void onCreate(android.os.Bundle)> -> <java.lang.Thread: void run()>
<java.lang.Thread: void start()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.AnfortActivity: void onCreate(android.os.Bundle)> -> <com.red.tube.a: void <init>(com.red.tube.AnfortActivity)>
<com.red.tube.a: void <init>(com.red.tube.AnfortActivity)> -> <java.lang.Object: void <init>()>
<com.red.tube.AnfortActivity: void onCreate(android.os.Bundle)> -> <com.red.tube.AnfortActivity: void a()>
<dummyMainClass: com.red.tube.SmsHandler dummyMainMethod_com_red_tube_SmsHandler(android.content.Intent)> -> <com.red.tube.SmsHandler: void <init>()>
<dummyMainClass: com.red.tube.SmsHandler dummyMainMethod_com_red_tube_SmsHandler(android.content.Intent)> -> <com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.SmsHandler: void <clinit>()>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.c: com.red.tube.c b()>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.h: byte[] a(java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.c: void <clinit>()>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: void <clinit>()>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.h: void <clinit>()>
<com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String)> -> <java.lang.String: void <clinit>()>
<com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String)> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.red.tube.c: com.red.tube.c b()> -> <com.red.tube.c: void <clinit>()>
<com.red.tube.h: byte[] a(java.lang.String)> -> <com.red.tube.h: void <clinit>()>
<com.red.tube.c: void <clinit>()> -> <com.red.tube.c: void <init>()>
<com.red.tube.c: void <init>()> -> <java.lang.Object: void <init>()>
<com.red.tube.h: byte[] a(java.lang.String)> -> <java.lang.String: int length()>
<java.lang.String: int length()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.c: void a(java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.c: java.lang.String a()>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: int length()>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: int indexOf(java.lang.String)>
<java.lang.String: int indexOf(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: boolean equalsIgnoreCase(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: java.lang.String toLowerCase()>
<java.lang.String: java.lang.String toLowerCase()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: java.lang.String[] split(java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: void <init>(byte[],java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: java.lang.String toUpperCase()>
<java.lang.String: java.lang.String toUpperCase()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: void <init>(byte[],java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: void <init>(byte[],java.lang.String)> -> <java.lang.Object: void <init>()>
<java.lang.String: java.lang.String[] split(java.lang.String)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: java.lang.String substring(int)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: java.lang.String substring(int,int)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: java.lang.String trim()>
<java.lang.String: java.lang.String trim()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int,int)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String substring(int)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.g: int a(int)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.g: void a(int,java.lang.String)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.g: void a(int,int)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.g: void <init>(android.content.Context)>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.SmsHandler: android.content.Intent getIntent()>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context)>
<com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context)> -> <com.red.tube.g: void <init>(android.content.Context)>
<com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context)> -> <com.red.tube.g: int a(int)>
<com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context)> -> <com.red.tube.g: java.lang.String b(int)>
<com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context)> -> <com.red.tube.g: void a(java.lang.String,int,android.content.Context)>
<com.red.tube.g: void a(java.lang.String,int,android.content.Context)> -> <com.red.tube.g: java.lang.String b(int)>
<com.red.tube.g: void a(java.lang.String,int,android.content.Context)> -> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String,java.lang.String,android.content.Context)> -> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
<dummyMainClass: com.red.tube.BootBroadcastReceiver dummyMainMethod_com_red_tube_BootBroadcastReceiver(android.content.Intent)> -> <com.red.tube.BootBroadcastReceiver: void <init>()>
<dummyMainClass: com.red.tube.BootBroadcastReceiver dummyMainMethod_com_red_tube_BootBroadcastReceiver(android.content.Intent)> -> <com.red.tube.BootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.red.tube.BootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.BootBroadcastReceiver: android.content.Intent getIntent()>
<dummyMainClass: com.red.tube.DeviceAdminReceiver dummyMainMethod_com_red_tube_DeviceAdminReceiver(android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: void <init>()>
<dummyMainClass: com.red.tube.DeviceAdminReceiver dummyMainMethod_com_red_tube_DeviceAdminReceiver(android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: boolean equals(java.lang.Object)>
<java.lang.String: boolean equals(java.lang.Object)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: android.content.Intent getIntent()>
<com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: void d(android.content.Context,android.content.Intent)>
<com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: void e(android.content.Context,android.content.Intent)>
<com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: void f(android.content.Context,android.content.Intent)>
<com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: void a(android.content.Context,android.content.Intent)>
<com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: java.lang.CharSequence b(android.content.Context,android.content.Intent)>
<com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: void c(android.content.Context,android.content.Intent)>
<com.red.tube.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <com.red.tube.DeviceAdminReceiver: void g(android.content.Context,android.content.Intent)>
<dummyMainClass: com.red.tube.MyService dummyMainMethod_com_red_tube_MyService(android.content.Intent)> -> <com.red.tube.MyService: void <init>()>
<dummyMainClass: com.red.tube.MyService dummyMainMethod_com_red_tube_MyService(android.content.Intent)> -> <com.red.tube.MyService: void onCreate()>
<dummyMainClass: com.red.tube.MyService dummyMainMethod_com_red_tube_MyService(android.content.Intent)> -> <com.red.tube.MyService: void onStart(android.content.Intent,int)>
<dummyMainClass: com.red.tube.MyService dummyMainMethod_com_red_tube_MyService(android.content.Intent)> -> <com.red.tube.MyService: android.os.IBinder onBind(android.content.Intent)>
<dummyMainClass: com.red.tube.MyService dummyMainMethod_com_red_tube_MyService(android.content.Intent)> -> <com.red.tube.MyService: void onDestroy()>
<com.red.tube.MyService: void onCreate()> -> <com.red.tube.MyService: void <clinit>()>
<com.red.tube.MyService: android.os.IBinder onBind(android.content.Intent)> -> <com.red.tube.MyService: android.content.Intent getIntent()>
<com.red.tube.MyService: void onStart(android.content.Intent,int)> -> <com.red.tube.MyService: android.content.Intent getIntent()>
<com.red.tube.MyService: void onCreate()> -> <com.red.tube.f: void <init>(com.red.tube.MyService,android.widget.Toast,android.content.Intent)>
<com.red.tube.MyService: void onCreate()> -> <com.red.tube.e: void <init>(com.red.tube.MyService)>
<com.red.tube.e: void <init>(com.red.tube.MyService)> -> <java.lang.Object: void <init>()>
<com.red.tube.MyService: void onCreate()> -> <com.red.tube.d: void <init>(com.red.tube.MyService)>
<com.red.tube.d: void <init>(com.red.tube.MyService)> -> <java.lang.Object: void <init>()>
<com.red.tube.MyService: void onCreate()> -> <java.lang.Thread: void <init>(java.lang.Runnable)>
<com.red.tube.MyService: void onCreate()> -> <java.lang.Thread: void start()>
<com.red.tube.MyService: void onCreate()> -> <java.lang.Thread: void run()>
<com.red.tube.MyService: void onCreate()> -> <java.util.Timer: void schedule(java.util.TimerTask,long,long)>
<java.util.Timer: void schedule(java.util.TimerTask,long,long)> -> <com.red.tube.f: void run()>
<com.red.tube.f: void run()> -> <com.red.tube.MyService: void <clinit>()>
<com.red.tube.f: void run()> -> <com.red.tube.MyService: void a(int)>
<com.red.tube.f: void run()> -> <com.red.tube.MyService: int c()>
<com.red.tube.f: void run()> -> <com.red.tube.MyService: void a(com.red.tube.MyService,java.lang.String,java.lang.String)>
<com.red.tube.f: void run()> -> <com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String)>
<com.red.tube.f: void run()> -> <com.red.tube.MyService: boolean a(com.red.tube.MyService)>
<com.red.tube.f: void run()> -> <com.red.tube.SmsHandler: void <clinit>()>
<com.red.tube.MyService: void a(int)> -> <com.red.tube.MyService: void <clinit>()>
<com.red.tube.MyService: int c()> -> <com.red.tube.MyService: void <clinit>()>
<com.red.tube.f: void run()> -> <com.red.tube.g: void <init>(android.content.Context)>
<com.red.tube.f: void run()> -> <com.red.tube.g: int a(int)>
<dummyMainClass: void dummyMainMethod(java.lang.String[])> -> <com.red.tube.RedT: void <init>()>
<com.red.tube.f: void run()> -> <com.red.tube.MyService: java.lang.String b()>
<com.red.tube.MyService: java.lang.String b()> -> <java.lang.String: java.lang.String valueOf(java.lang.Object)>
<com.red.tube.MyService: java.lang.String b()> -> <java.lang.String: void <clinit>()>
<com.red.tube.MyService: java.lang.String b()> -> <com.red.tube.MyService: java.lang.String a(java.lang.String)>
<com.red.tube.MyService: java.lang.String a(java.lang.String)> -> <java.lang.Character: void <clinit>()>
<com.red.tube.MyService: java.lang.String a(java.lang.String)> -> <java.lang.String: java.lang.String valueOf(char)>
<com.red.tube.MyService: java.lang.String a(java.lang.String)> -> <java.lang.Character: char toUpperCase(char)>
<com.red.tube.MyService: java.lang.String a(java.lang.String)> -> <java.lang.Character: boolean isUpperCase(char)>
<com.red.tube.MyService: java.lang.String a(java.lang.String)> -> <java.lang.String: void <clinit>()>
<java.lang.Character: boolean isUpperCase(char)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.Character: char toUpperCase(char)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<java.lang.String: java.lang.String valueOf(char)> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.MyService: java.lang.String a(java.lang.String)> -> <java.lang.String: int length()>
<com.red.tube.MyService: java.lang.String a(java.lang.String)> -> <java.lang.String: java.lang.String substring(int)>
<com.red.tube.f: void run()> -> <com.red.tube.MyService: void a()>
<com.red.tube.MyService: void a()> -> <java.lang.Throwable: void printStackTrace()>
<java.lang.Throwable: void printStackTrace()> -> <java.lang.RuntimeException: void <init>(java.lang.String)>
<com.red.tube.MyService: boolean a(com.red.tube.MyService)> -> <com.red.tube.MyService: boolean d()>
<com.red.tube.MyService: boolean d()> -> <com.red.tube.g: void <init>(android.content.Context)>
<com.red.tube.MyService: boolean d()> -> <com.red.tube.g: int a(int)>
<com.red.tube.MyService: boolean d()> -> <com.red.tube.g: void a(int,int)>
<com.red.tube.MyService: void a(com.red.tube.MyService,java.lang.String,java.lang.String)> -> <com.red.tube.MyService: void a(java.lang.String,java.lang.String)>
<java.lang.Thread: void run()> -> <com.red.tube.b: void run()>
<java.lang.Thread: void run()> -> <com.red.tube.d: void run()>
<java.lang.Thread: void run()> -> <com.red.tube.e: void run()>
<com.red.tube.d: void run()> -> <com.red.tube.MyService: void <clinit>()>
<com.red.tube.d: void run()> -> <com.red.tube.MyService: void a(com.red.tube.MyService,java.io.File)>
<com.red.tube.e: void run()> -> <com.red.tube.SmsHandler: void <clinit>()>
<com.red.tube.e: void run()> -> <com.red.tube.c: com.red.tube.c b()>
<com.red.tube.e: void run()> -> <com.red.tube.SmsHandler: void a(java.lang.String,java.lang.String)>
<com.red.tube.e: void run()> -> <com.red.tube.c: void <clinit>()>
<com.red.tube.e: void run()> -> <com.red.tube.c: void a(java.lang.String)>
<com.red.tube.e: void run()> -> <com.red.tube.g: void <init>(android.content.Context)>
<com.red.tube.e: void run()> -> <com.red.tube.g: void a(int,int)>
<com.red.tube.e: void run()> -> <com.red.tube.g: void a(int,java.lang.String)>
<com.red.tube.MyService: void a(com.red.tube.MyService,java.io.File)> -> <com.red.tube.MyService: void a(java.io.File)>
<com.red.tube.BootBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: boolean equals(java.lang.Object)>
<com.red.tube.MyService: void onCreate()> -> <com.red.tube.d: void run()>
<com.red.tube.AnfortActivity: void onCreate(android.os.Bundle)> -> <com.red.tube.b: void run()>
<com.red.tube.g: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> -> <com.red.tube.g: void onCreate(android.database.sqlite.SQLiteDatabase)>
<com.red.tube.MyService: void onCreate()> -> <com.red.tube.e: void run()>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.Throwable: void printStackTrace()>
<com.red.tube.SmsHandler: void onReceive(android.content.Context,android.content.Intent)> -> <java.lang.String: boolean equals(java.lang.Object)>
