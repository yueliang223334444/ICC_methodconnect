STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.SrvKnock dummyMainMethod_ssxodv_jdipue_wltter_SrvKnock(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.SrvKnock dummyMainMethod_ssxodv_jdipue_wltter_SrvKnock(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.BootReciv dummyMainMethod_ssxodv_jdipue_wltter_BootReciv(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.BootReciv dummyMainMethod_ssxodv_jdipue_wltter_BootReciv(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverKnock dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverKnock(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverKnock dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverKnock(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.MAC dummyMainMethod_ssxodv_jdipue_wltter_MAC(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.MAC dummyMainMethod_ssxodv_jdipue_wltter_MAC(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverAdm dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverAdm(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverAdm dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverAdm(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.ActivityWeb dummyMainMethod_ssxodv_jdipue_wltter_ActivityWeb(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.ActivityWeb dummyMainMethod_ssxodv_jdipue_wltter_ActivityWeb(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.Activity1 dummyMainMethod_ssxodv_jdipue_wltter_Activity1(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.Activity1 dummyMainMethod_ssxodv_jdipue_wltter_Activity1(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverSmsMan dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverSmsMan(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverSmsMan dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverSmsMan(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.IntentReceiver dummyMainMethod_ssxodv_jdipue_wltter_IntentReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.IntentReceiver dummyMainMethod_ssxodv_jdipue_wltter_IntentReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.MmsReceiver dummyMainMethod_ssxodv_jdipue_wltter_MmsReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.MmsReceiver dummyMainMethod_ssxodv_jdipue_wltter_MmsReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.SrvProcMon dummyMainMethod_ssxodv_jdipue_wltter_SrvProcMon(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.SrvProcMon dummyMainMethod_ssxodv_jdipue_wltter_SrvProcMon(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.HeadlessSmsSendService dummyMainMethod_ssxodv_jdipue_wltter_HeadlessSmsSendService(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.HeadlessSmsSendService dummyMainMethod_ssxodv_jdipue_wltter_HeadlessSmsSendService(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.IMMon dummyMainMethod_ssxodv_jdipue_wltter_IMMon(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.IMMon dummyMainMethod_ssxodv_jdipue_wltter_IMMon(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.SrvAdm dummyMainMethod_ssxodv_jdipue_wltter_SrvAdm(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.SrvAdm dummyMainMethod_ssxodv_jdipue_wltter_SrvAdm(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.IMService dummyMainMethod_ssxodv_jdipue_wltter_IMService(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.IMService dummyMainMethod_ssxodv_jdipue_wltter_IMService(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.SrvKlog dummyMainMethod_ssxodv_jdipue_wltter_SrvKlog(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.SrvKlog dummyMainMethod_ssxodv_jdipue_wltter_SrvKlog(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.ComposeSmsActivity dummyMainMethod_ssxodv_jdipue_wltter_ComposeSmsActivity(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.ComposeSmsActivity dummyMainMethod_ssxodv_jdipue_wltter_ComposeSmsActivity(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.rNetworkStatus dummyMainMethod_ssxodv_jdipue_wltter_rNetworkStatus(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.rNetworkStatus dummyMainMethod_ssxodv_jdipue_wltter_rNetworkStatus(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.CAdm dummyMainMethod_ssxodv_jdipue_wltter_CAdm(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.CAdm dummyMainMethod_ssxodv_jdipue_wltter_CAdm(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.SmsReceiver dummyMainMethod_ssxodv_jdipue_wltter_SmsReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.SmsReceiver dummyMainMethod_ssxodv_jdipue_wltter_SmsReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: ssxodv.jdipue.wltter.ActivityMMS dummyMainMethod_ssxodv_jdipue_wltter_ActivityMMS(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: ssxodv.jdipue.wltter.ActivityMMS dummyMainMethod_ssxodv_jdipue_wltter_ActivityMMS(android.content.Intent)>
SPECIAL edge: specialinvoke $r1.<f: void <init>(ssxodv.jdipue.wltter.ActivityMMS)>($r0) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityMMS dummyMainMethod_ssxodv_jdipue_wltter_ActivityMMS(android.content.Intent)> ==> <f: void <init>(ssxodv.jdipue.wltter.ActivityMMS)>
VIRTUAL edge: virtualinvoke $r1.<f: void onClick(android.view.View)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityMMS dummyMainMethod_ssxodv_jdipue_wltter_ActivityMMS(android.content.Intent)> ==> <f: void onClick(android.view.View)>
STATIC edge: staticinvoke <u: void i(android.content.Context)>($r2) in <f: void onClick(android.view.View)> ==> <u: void i(android.content.Context)>
CLINIT edge: $r2 = <j: java.lang.String az> in <u: void i(android.content.Context)> ==> <j: void <clinit>()>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,int)>($r0, $r2, 1) in <u: void i(android.content.Context)> ==> <y: void a(android.content.Context,java.lang.String,int)>
STATIC edge: $i0 = staticinvoke <y: int a(android.content.Context,java.lang.String)>($r0, $r2) in <u: void i(android.content.Context)> ==> <y: int a(android.content.Context,java.lang.String)>
STATIC edge: $r0 = staticinvoke <w: java.lang.String a(java.lang.String)>("R7iJQzOj8FBYAcN8Vmh5WVHkB7Gc3cB4eLizglgCjTqxyqsVtHI8ib68oC+zzgWAGsUyw31pnvc=") in <j: void <clinit>()> ==> <w: java.lang.String a(java.lang.String)>
CLINIT edge: $r2 = <j: java.lang.String c> in <y: void a(android.content.Context,java.lang.String,int)> ==> <j: void <clinit>()>
CLINIT edge: $r2 = <j: java.lang.String c> in <y: int a(android.content.Context,java.lang.String)> ==> <j: void <clinit>()>
CLINIT edge: $r2 = new java.lang.String in <w: java.lang.String a(java.lang.String)> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") in <w: java.lang.String a(java.lang.String)> ==> <java.lang.String: byte[] getBytes(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "UTF-8") in <w: java.lang.String a(java.lang.String)> ==> <java.lang.String: void <init>(byte[],java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "") in <w: java.lang.String a(java.lang.String)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>()> ==> <java.lang.Throwable: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Throwable: void <init>()> ==> <java.lang.Object: void <init>()>
FINALIZE edge: null in <java.lang.Object: void <init>()> ==> <java.lang.Object: void finalize()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: byte[] getBytes(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>() in <w: java.lang.String a(java.lang.String)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void printStackTrace()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<o: void <init>(byte[])>($r3) in <w: java.lang.String a(java.lang.String)> ==> <o: void <init>(byte[])>
VIRTUAL edge: $r3 = virtualinvoke $r1.<o: byte[] a(byte[])>($r3) in <w: java.lang.String a(java.lang.String)> ==> <o: byte[] a(byte[])>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <o: void <init>(byte[])> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <f: void <init>(ssxodv.jdipue.wltter.ActivityMMS)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.ActivityMMS: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.ActivityMMS dummyMainMethod_ssxodv_jdipue_wltter_ActivityMMS(android.content.Intent)> ==> <ssxodv.jdipue.wltter.ActivityMMS: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.ActivityMMS: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityMMS dummyMainMethod_ssxodv_jdipue_wltter_ActivityMMS(android.content.Intent)> ==> <ssxodv.jdipue.wltter.ActivityMMS: void onCreate(android.os.Bundle)>
STATIC edge: $i0 = staticinvoke <u: int a(int,int)>(0, 9999) in <ssxodv.jdipue.wltter.ActivityMMS: void onCreate(android.os.Bundle)> ==> <u: int a(int,int)>
CLINIT edge: $r6 = <j: java.lang.String aD> in <ssxodv.jdipue.wltter.ActivityMMS: void onCreate(android.os.Bundle)> ==> <j: void <clinit>()>
SPECIAL edge: specialinvoke $r17.<f: void <init>(ssxodv.jdipue.wltter.ActivityMMS)>(r0) in <ssxodv.jdipue.wltter.ActivityMMS: void onCreate(android.os.Bundle)> ==> <f: void <init>(ssxodv.jdipue.wltter.ActivityMMS)>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.SmsReceiver: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.SmsReceiver dummyMainMethod_ssxodv_jdipue_wltter_SmsReceiver(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SmsReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.SmsReceiver dummyMainMethod_ssxodv_jdipue_wltter_SmsReceiver(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.SmsReceiver: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.SmsReceiver: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke r0.<ssxodv.jdipue.wltter.SmsReceiver: void a(android.os.Bundle,android.content.Context)>($r3, $r1) in <ssxodv.jdipue.wltter.SmsReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.SmsReceiver: void a(android.os.Bundle,android.content.Context)>
CLINIT edge: $r5 = <j: java.lang.String o> in <ssxodv.jdipue.wltter.SmsReceiver: void a(android.os.Bundle,android.content.Context)> ==> <j: void <clinit>()>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r10, "") in <ssxodv.jdipue.wltter.SmsReceiver: void a(android.os.Bundle,android.content.Context)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r3.<p: void <init>(ssxodv.jdipue.wltter.SmsReceiver)>(r0) in <ssxodv.jdipue.wltter.SmsReceiver: void a(android.os.Bundle,android.content.Context)> ==> <p: void <init>(ssxodv.jdipue.wltter.SmsReceiver)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <p: void <init>(ssxodv.jdipue.wltter.SmsReceiver)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $r5 = specialinvoke r0.<ssxodv.jdipue.wltter.SmsReceiver: java.lang.String a(android.telephony.SmsMessage[])>($r4) in <ssxodv.jdipue.wltter.SmsReceiver: void a(android.os.Bundle,android.content.Context)> ==> <ssxodv.jdipue.wltter.SmsReceiver: java.lang.String a(android.telephony.SmsMessage[])>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toString()>() in <ssxodv.jdipue.wltter.SmsReceiver: java.lang.String a(android.telephony.SmsMessage[])> ==> <java.lang.String: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.CAdm: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.CAdm dummyMainMethod_ssxodv_jdipue_wltter_CAdm(android.content.Intent)> ==> <ssxodv.jdipue.wltter.CAdm: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.CAdm: void onEnabled(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.CAdm dummyMainMethod_ssxodv_jdipue_wltter_CAdm(android.content.Intent)> ==> <ssxodv.jdipue.wltter.CAdm: void onEnabled(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.CAdm: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.CAdm: void onEnabled(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.CAdm: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.rNetworkStatus: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.rNetworkStatus dummyMainMethod_ssxodv_jdipue_wltter_rNetworkStatus(android.content.Intent)> ==> <ssxodv.jdipue.wltter.rNetworkStatus: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.rNetworkStatus dummyMainMethod_ssxodv_jdipue_wltter_rNetworkStatus(android.content.Intent)> ==> <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)>
CLINIT edge: $i0 = staticinvoke <aa: int b(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)> ==> <aa: void <clinit>()>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,int)>($r1, $r3, 0) in <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)> ==> <y: void a(android.content.Context,java.lang.String,int)>
STATIC edge: staticinvoke <u: void f(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void f(android.content.Context)>
STATIC edge: staticinvoke <u: void d(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void d(android.content.Context)>
STATIC edge: staticinvoke <u: void b(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void b(android.content.Context)>
STATIC edge: $z0 = staticinvoke <u: boolean a(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)> ==> <u: boolean a(android.content.Context)>
STATIC edge: $i0 = staticinvoke <aa: int b(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)> ==> <aa: int b(android.content.Context)>
CLINIT edge: $r3 = <j: java.lang.String y> in <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)> ==> <j: void <clinit>()>
CLINIT edge: $r4 = <j: java.lang.String ae> in <u: boolean a(android.content.Context)> ==> <j: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <aa: int a(android.content.Context)>($r0) in <aa: int b(android.content.Context)> ==> <aa: void <clinit>()>
STATIC edge: $i0 = staticinvoke <aa: int a(android.content.Context)>($r0) in <aa: int b(android.content.Context)> ==> <aa: int a(android.content.Context)>
CLINIT edge: $i0 = <aa: int a> in <aa: int a(android.content.Context)> ==> <aa: void <clinit>()>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.rNetworkStatus: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.rNetworkStatus: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.rNetworkStatus: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.ComposeSmsActivity: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.ComposeSmsActivity dummyMainMethod_ssxodv_jdipue_wltter_ComposeSmsActivity(android.content.Intent)> ==> <ssxodv.jdipue.wltter.ComposeSmsActivity: void <init>()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.SrvKlog: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.SrvKlog dummyMainMethod_ssxodv_jdipue_wltter_SrvKlog(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKlog: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvKlog: void onCreate()>() in <dummyMainClass: ssxodv.jdipue.wltter.SrvKlog dummyMainMethod_ssxodv_jdipue_wltter_SrvKlog(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKlog: void onCreate()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvKlog: int onStartCommand(android.content.Intent,int,int)>(null, 0, 0) in <dummyMainClass: ssxodv.jdipue.wltter.SrvKlog dummyMainMethod_ssxodv_jdipue_wltter_SrvKlog(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKlog: int onStartCommand(android.content.Intent,int,int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvKlog: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.SrvKlog dummyMainMethod_ssxodv_jdipue_wltter_SrvKlog(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKlog: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: parameter0 = virtualinvoke this.<ssxodv.jdipue.wltter.SrvKlog: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.SrvKlog: android.os.IBinder onBind(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKlog: android.content.Intent getIntent()>
VIRTUAL edge: $r1 = virtualinvoke r0.<ssxodv.jdipue.wltter.SrvKlog: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.SrvKlog: int onStartCommand(android.content.Intent,int,int)> ==> <ssxodv.jdipue.wltter.SrvKlog: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke $r1.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r2, 10000L, 60000L) in <ssxodv.jdipue.wltter.SrvKlog: void onCreate()> ==> <java.util.Timer: void schedule(java.util.TimerTask,long,long)>
VIRTUAL edge: virtualinvoke param0.<java.util.TimerTask: void run()>() in <java.util.Timer: void schedule(java.util.TimerTask,long,long)> ==> <r: void run()>
CLINIT edge: $r4 = new org.json.JSONObject in <r: void run()> ==> <org.json.JSONObject: void <clinit>()>
STATIC edge: staticinvoke <u: void a(android.content.Context,java.lang.String)>($r7, $r2) in <r: void run()> ==> <u: void a(android.content.Context,java.lang.String)>
STATIC edge: $r1 = staticinvoke <y: java.lang.String a(java.lang.String)>($r1) in <r: void run()> ==> <y: java.lang.String a(java.lang.String)>
STATIC edge: $r1 = staticinvoke <y: java.lang.String a()>() in <r: void run()> ==> <y: java.lang.String a()>
CLINIT edge: $r5 = <j: java.lang.String e> in <r: void run()> ==> <j: void <clinit>()>
STATIC edge: $r0 = staticinvoke <y: java.lang.String a(java.io.InputStream)>($r1) in <y: java.lang.String a(java.lang.String)> ==> <y: java.lang.String a(java.io.InputStream)>
SPECIAL edge: specialinvoke $r2.<m: void <init>()>() in <u: void a(android.content.Context,java.lang.String)> ==> <m: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<m: void a(android.content.Context)>($r0) in <u: void a(android.content.Context,java.lang.String)> ==> <m: void a(android.content.Context)>
VIRTUAL edge: virtualinvoke $r2.<m: void a(java.lang.String)>($r5) in <u: void a(android.content.Context,java.lang.String)> ==> <m: void a(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<m: void a(android.telephony.TelephonyManager)>($r4) in <u: void a(android.content.Context,java.lang.String)> ==> <m: void a(android.telephony.TelephonyManager)>
VIRTUAL edge: virtualinvoke $r2.<m: void b(java.lang.String)>($r1) in <u: void a(android.content.Context,java.lang.String)> ==> <m: void b(java.lang.String)>
VIRTUAL edge: virtualinvoke $r2.<m: void start()>() in <u: void a(android.content.Context,java.lang.String)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r2.<m: void start()>() in <u: void a(android.content.Context,java.lang.String)> ==> <m: void run()>
CLINIT edge: $r1 = new ad in <m: void <init>()> ==> <ad: void <clinit>()>
CLINIT edge: $r1 = new org.json.JSONObject in <m: void run()> ==> <org.json.JSONObject: void <clinit>()>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,int)>($r5, $r2, 0) in <m: void run()> ==> <y: void a(android.content.Context,java.lang.String,int)>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,java.lang.String)>($r5, $r3, $r2) in <m: void run()> ==> <y: void a(android.content.Context,java.lang.String,java.lang.String)>
STATIC edge: $r9 = staticinvoke <y: java.lang.String a(android.content.Context,java.lang.String)>($r11, $r9) in <m: void run()> ==> <y: java.lang.String a(android.content.Context,java.lang.String)>
STATIC edge: $i0 = staticinvoke <y: int a(android.content.Context,java.lang.String)>($r5, $r2) in <m: void run()> ==> <y: int a(android.content.Context,java.lang.String)>
STATIC edge: $z0 = staticinvoke <z: boolean a(java.lang.String)>($r3) in <m: void run()> ==> <z: boolean a(java.lang.String)>
STATIC edge: $r2 = staticinvoke <aa: java.lang.String a(java.lang.String,org.json.JSONObject)>($r2, $r1) in <m: void run()> ==> <aa: java.lang.String a(java.lang.String,org.json.JSONObject)>
STATIC edge: $i0 = staticinvoke <aa: int b(android.content.Context)>($r5) in <m: void run()> ==> <aa: int b(android.content.Context)>
STATIC edge: $i0 = staticinvoke <u: int a(android.content.Context)>($r5) in <m: void run()> ==> <u: int a(android.content.Context)>
STATIC edge: $i0 = staticinvoke <ab: int a(android.content.Context)>($r5) in <m: void run()> ==> <ab: int a(android.content.Context)>
CLINIT edge: $r2 = <j: java.lang.String B> in <m: void run()> ==> <j: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <aa: int b(android.content.Context)>($r5) in <m: void run()> ==> <aa: void <clinit>()>
CLINIT edge: $r0 = <j: java.lang.String n> in <ad: void <clinit>()> ==> <j: void <clinit>()>
CLINIT edge: $r3 = <j: java.lang.String c> in <y: void a(android.content.Context,java.lang.String,java.lang.String)> ==> <j: void <clinit>()>
CLINIT edge: $r2 = <j: java.lang.String c> in <y: java.lang.String a(android.content.Context,java.lang.String)> ==> <j: void <clinit>()>
CLINIT edge: $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1) in <z: boolean a(java.lang.String)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1) in <z: boolean a(java.lang.String)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
CLINIT edge: $r0 = staticinvoke <aa: java.lang.String a(java.io.InputStream)>($r10) in <aa: java.lang.String a(java.lang.String,org.json.JSONObject)> ==> <aa: void <clinit>()>
STATIC edge: $r0 = staticinvoke <aa: java.lang.String a(java.io.InputStream)>($r10) in <aa: java.lang.String a(java.lang.String,org.json.JSONObject)> ==> <aa: java.lang.String a(java.io.InputStream)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: int parseInt(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") in <aa: java.lang.String a(java.lang.String,org.json.JSONObject)> ==> <java.lang.String: byte[] getBytes(java.lang.String)>
VIRTUAL edge: $r4 = virtualinvoke $r2.<o: byte[] a(java.lang.String)>($r0) in <aa: java.lang.String a(java.lang.String,org.json.JSONObject)> ==> <o: byte[] a(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") in <o: byte[] a(java.lang.String)> ==> <java.lang.String: byte[] getBytes(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke r0.<o: byte[] a(byte[])>($r2) in <o: byte[] a(java.lang.String)> ==> <o: byte[] a(byte[])>
SPECIAL edge: specialinvoke $r12.<o: void <init>(byte[])>($r4) in <aa: java.lang.String a(java.lang.String,org.json.JSONObject)> ==> <o: void <init>(byte[])>
VIRTUAL edge: $r0 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>() in <aa: java.lang.String a(java.lang.String,org.json.JSONObject)> ==> <org.json.JSONObject: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONObject: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "") in <z: boolean a(java.lang.String)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
VIRTUAL edge: $i0 = virtualinvoke $r0.<java.lang.String: int length()>() in <z: boolean a(java.lang.String)> ==> <java.lang.String: int length()>
VIRTUAL edge: $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2) in <z: boolean a(java.lang.String)> ==> <java.lang.String: java.lang.String substring(int,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String substring(int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int length()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>($r2) in <m: void run()> ==> <org.json.JSONObject: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r2) in <m: void run()> ==> <org.json.JSONObject: java.lang.String getString(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONObject: java.lang.String getString(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONObject: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.json.JSONObject: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke $r2.<java.lang.String: int length()>() in <m: void run()> ==> <java.lang.String: int length()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3) in <m: void run()> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<org.json.JSONObject: void <init>()>() in <m: void run()> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r2, $r3) in <m: void run()> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONObject: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.json.JSONObject: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void run()>() in <m: void run()> ==> <java.lang.Thread: void run()>
VIRTUAL edge: virtualinvoke r0.<m: void d(java.lang.String)>($r2) in <m: void run()> ==> <m: void d(java.lang.String)>
CLINIT edge: $r4 = new java.lang.String in <m: void d(java.lang.String)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r7 = new org.json.JSONObject in <m: void d(java.lang.String)> ==> <org.json.JSONObject: void <clinit>()>
CLINIT edge: $r1 = <j: java.lang.String V> in <m: void d(java.lang.String)> ==> <j: void <clinit>()>
VIRTUAL edge: virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>() in <m: void d(java.lang.String)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r8.<org.json.JSONObject: void <init>(java.lang.String)>($r4) in <m: void d(java.lang.String)> ==> <org.json.JSONObject: void <init>(java.lang.String)>
VIRTUAL edge: $r2 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r2) in <m: void d(java.lang.String)> ==> <org.json.JSONObject: java.lang.String getString(java.lang.String)>
SPECIAL edge: specialinvoke $r7.<org.json.JSONObject: void <init>()>() in <m: void d(java.lang.String)> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r9, $r2) in <m: void d(java.lang.String)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
VIRTUAL edge: $r1 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String toString()>() in <m: void d(java.lang.String)> ==> <org.json.JSONObject: java.lang.String toString()>
SPECIAL edge: specialinvoke $r6.<org.json.JSONArray: void <init>(java.lang.String)>($r4) in <m: void d(java.lang.String)> ==> <org.json.JSONArray: void <init>(java.lang.String)>
VIRTUAL edge: $i1 = virtualinvoke $r6.<org.json.JSONArray: int length()>() in <m: void d(java.lang.String)> ==> <org.json.JSONArray: int length()>
VIRTUAL edge: $r7 = virtualinvoke $r6.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0) in <m: void d(java.lang.String)> ==> <org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONArray: org.json.JSONObject getJSONObject(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONArray: int length()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONArray: void <init>(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.json.JSONArray: void <init>(java.lang.String)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8") in <m: void d(java.lang.String)> ==> <java.lang.String: byte[] getBytes(java.lang.String)>
SPECIAL edge: specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>($r5, "UTF-8") in <m: void d(java.lang.String)> ==> <java.lang.String: void <init>(byte[],java.lang.String)>
VIRTUAL edge: $i1 = virtualinvoke $r4.<java.lang.String: int length()>() in <m: void d(java.lang.String)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke $r3.<o: void <init>(byte[])>($r5) in <m: void d(java.lang.String)> ==> <o: void <init>(byte[])>
VIRTUAL edge: $r5 = virtualinvoke $r3.<o: byte[] a(byte[])>($r5) in <m: void d(java.lang.String)> ==> <o: byte[] a(byte[])>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4) in <m: void d(java.lang.String)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equalsIgnoreCase(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: $r4 = specialinvoke r0.<m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>($r1, $r4, $r2) in <m: void d(java.lang.String)> ==> <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<m: void c(java.lang.String)>($r1) in <m: void d(java.lang.String)> ==> <m: void c(java.lang.String)>
CLINIT edge: $r7 = new org.json.JSONObject in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <org.json.JSONObject: void <clinit>()>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,java.lang.String)>($r5, $r2, $r3) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <y: void a(android.content.Context,java.lang.String,java.lang.String)>
STATIC edge: $r3 = staticinvoke <aa: java.lang.String a(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <aa: java.lang.String a(android.content.Context)>
STATIC edge: $r3 = staticinvoke <v: java.lang.String a(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <v: java.lang.String a(android.content.Context)>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,int)>($r5, $r3, 1) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <y: void a(android.content.Context,java.lang.String,int)>
STATIC edge: $r3 = staticinvoke <ab: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>($r5, $r6, $r10, $r3) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <ab: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
STATIC edge: $r6 = staticinvoke <x: java.lang.String a(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <x: java.lang.String a(android.content.Context)>
STATIC edge: $r6 = staticinvoke <u: java.lang.String b(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <u: java.lang.String b(android.content.Context)>
STATIC edge: staticinvoke <u: java.lang.String a(android.content.Context,java.lang.String)>($r5, $r6) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <u: java.lang.String a(android.content.Context,java.lang.String)>
STATIC edge: $r6 = staticinvoke <u: java.lang.String a(java.lang.String,java.lang.String)>($r6, $r10) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <u: java.lang.String a(java.lang.String,java.lang.String)>
STATIC edge: $r6 = staticinvoke <ac: java.lang.String a(android.content.Context,java.lang.String)>($r5, $r6) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <ac: java.lang.String a(android.content.Context,java.lang.String)>
STATIC edge: $r6 = staticinvoke <u: java.lang.String a(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <u: java.lang.String a(android.content.Context)>
STATIC edge: $r6 = staticinvoke <ac: java.lang.String b(android.content.Context,java.lang.String)>($r5, $r2) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <ac: java.lang.String b(android.content.Context,java.lang.String)>
STATIC edge: $r6 = staticinvoke <ab: java.lang.String a(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <ab: java.lang.String a(android.content.Context)>
STATIC edge: $r6 = staticinvoke <z: java.lang.String c(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <z: java.lang.String c(android.content.Context)>
STATIC edge: $r6 = staticinvoke <z: java.lang.String b(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <z: java.lang.String b(android.content.Context)>
STATIC edge: $r6 = staticinvoke <z: java.lang.String a(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <z: java.lang.String a(android.content.Context)>
CLINIT edge: $r1 = <j: java.lang.String X> in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <j: void <clinit>()>
CLINIT edge: $r3 = staticinvoke <aa: java.lang.String a(android.content.Context)>($r5) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <aa: void <clinit>()>
CLINIT edge: $r1 = new org.json.JSONObject in <aa: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: void <clinit>()>
STATIC edge: $r2 = staticinvoke <y: java.lang.String a(android.content.Context,java.lang.String)>($r0, $r2) in <aa: java.lang.String a(android.content.Context)> ==> <y: java.lang.String a(android.content.Context,java.lang.String)>
CLINIT edge: $r2 = <j: java.lang.String a> in <aa: java.lang.String a(android.content.Context)> ==> <j: void <clinit>()>
CLINIT edge: $r3 = newarray (java.lang.String)[5] in <v: java.lang.String a(android.content.Context)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r1 = <j: java.lang.String z> in <v: java.lang.String a(android.content.Context)> ==> <j: void <clinit>()>
CLINIT edge: $r7 = new org.json.JSONObject in <v: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: void <clinit>()>
CLINIT edge: $r1 = <j: java.lang.String X> in <ab: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)> ==> <j: void <clinit>()>
CLINIT edge: $r3 = <j: java.lang.String p> in <u: java.lang.String b(android.content.Context)> ==> <j: void <clinit>()>
CLINIT edge: $r1 = <j: java.lang.String ao> in <u: java.lang.String a(android.content.Context,java.lang.String)> ==> <j: void <clinit>()>
CLINIT edge: $r4 = <j: java.lang.String u> in <ac: java.lang.String a(android.content.Context,java.lang.String)> ==> <j: void <clinit>()>
CLINIT edge: $r2 = <j: java.lang.String at> in <ab: java.lang.String a(android.content.Context)> ==> <j: void <clinit>()>
CLINIT edge: $r6 = new org.json.JSONObject in <ab: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: void <clinit>()>
CLINIT edge: $r2 = new org.json.JSONObject in <z: java.lang.String c(android.content.Context)> ==> <org.json.JSONObject: void <clinit>()>
CLINIT edge: $r8 = <j: java.lang.String ap> in <z: java.lang.String c(android.content.Context)> ==> <j: void <clinit>()>
STATIC edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7) in <z: java.lang.String b(android.content.Context)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
CLINIT edge: $r7 = <j: java.lang.String ap> in <z: java.lang.String b(android.content.Context)> ==> <j: void <clinit>()>
CLINIT edge: $r10 = new org.json.JSONObject in <z: java.lang.String b(android.content.Context)> ==> <org.json.JSONObject: void <clinit>()>
CLINIT edge: $r8 = newarray (java.lang.String)[1] in <z: java.lang.String b(android.content.Context)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7) in <z: java.lang.String b(android.content.Context)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r2 = newarray (java.lang.String)[2] in <z: java.lang.String a(android.content.Context)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r8 = new org.json.JSONObject in <z: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: void <clinit>()>
SPECIAL edge: specialinvoke $r8.<org.json.JSONObject: void <init>()>() in <z: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("title", $r6) in <z: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
SPECIAL edge: specialinvoke $r1.<org.json.JSONArray: void <init>()>() in <z: java.lang.String a(android.content.Context)> ==> <org.json.JSONArray: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r8) in <z: java.lang.String a(android.content.Context)> ==> <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
VIRTUAL edge: $r6 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String toString()>() in <z: java.lang.String a(android.content.Context)> ==> <org.json.JSONArray: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONArray: java.lang.String toString()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONArray: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <org.json.JSONArray: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r10.<org.json.JSONObject: void <init>()>() in <z: java.lang.String b(android.content.Context)> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r10.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r7, $r6) in <z: java.lang.String b(android.content.Context)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
SPECIAL edge: specialinvoke $r1.<org.json.JSONArray: void <init>()>() in <z: java.lang.String b(android.content.Context)> ==> <org.json.JSONArray: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r10) in <z: java.lang.String b(android.content.Context)> ==> <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
VIRTUAL edge: $r6 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String toString()>() in <z: java.lang.String b(android.content.Context)> ==> <org.json.JSONArray: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<org.json.JSONObject: void <init>()>() in <z: java.lang.String c(android.content.Context)> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r8, $r9) in <z: java.lang.String c(android.content.Context)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
SPECIAL edge: specialinvoke $r1.<org.json.JSONArray: void <init>()>() in <z: java.lang.String c(android.content.Context)> ==> <org.json.JSONArray: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r2) in <z: java.lang.String c(android.content.Context)> ==> <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
VIRTUAL edge: $r8 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String toString()>() in <z: java.lang.String c(android.content.Context)> ==> <org.json.JSONArray: java.lang.String toString()>
SPECIAL edge: specialinvoke $r6.<org.json.JSONObject: void <init>()>() in <ab: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke $r6.<org.json.JSONObject: int length()>() in <ab: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: int length()>
VIRTUAL edge: virtualinvoke $r6.<org.json.JSONObject: java.lang.Object remove(java.lang.String)>($r2) in <ab: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: java.lang.Object remove(java.lang.String)>
VIRTUAL edge: virtualinvoke $r6.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r2, $r7) in <ab: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONObject: java.lang.Object remove(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONObject: int length()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r5.<org.json.JSONArray: void <init>()>() in <ab: java.lang.String a(android.content.Context)> ==> <org.json.JSONArray: void <init>()>
VIRTUAL edge: virtualinvoke $r5.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r6) in <ab: java.lang.String a(android.content.Context)> ==> <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke $r5.<org.json.JSONArray: java.lang.String toString()>() in <ab: java.lang.String a(android.content.Context)> ==> <org.json.JSONArray: java.lang.String toString()>
VIRTUAL edge: $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toString()>() in <ab: java.lang.String a(android.content.Context)> ==> <java.lang.String: java.lang.String toString()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7) in <ab: java.lang.String a(android.content.Context)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<n: void <init>(android.content.Context)>($r0) in <u: java.lang.String b(android.content.Context)> ==> <n: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r1.<n: android.location.Location a()>() in <u: java.lang.String b(android.content.Context)> ==> <n: android.location.Location a()>
VIRTUAL edge: $d0 = virtualinvoke $r1.<n: double a()>() in <u: java.lang.String b(android.content.Context)> ==> <n: double a()>
VIRTUAL edge: $d0 = virtualinvoke $r1.<n: double b()>() in <u: java.lang.String b(android.content.Context)> ==> <n: double b()>
VIRTUAL edge: virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>() in <n: android.location.Location a()> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <n: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: virtualinvoke r0.<n: android.location.Location a()>() in <n: void <init>(android.content.Context)> ==> <n: android.location.Location a()>
SPECIAL edge: specialinvoke $r7.<org.json.JSONObject: void <init>()>() in <v: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r1, $r8) in <v: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
VIRTUAL edge: virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>($r1, $l1) in <v: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>
VIRTUAL edge: virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>($r1, $i0) in <v: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r2.<org.json.JSONArray: void <init>()>() in <v: java.lang.String a(android.content.Context)> ==> <org.json.JSONArray: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r7) in <v: java.lang.String a(android.content.Context)> ==> <org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
VIRTUAL edge: $r1 = virtualinvoke $r2.<org.json.JSONArray: java.lang.String toString()>() in <v: java.lang.String a(android.content.Context)> ==> <org.json.JSONArray: java.lang.String toString()>
SPECIAL edge: specialinvoke $r1.<org.json.JSONObject: void <init>()>() in <aa: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("1", $r2) in <aa: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>() in <aa: java.lang.String a(android.content.Context)> ==> <org.json.JSONObject: java.lang.String toString()>
VIRTUAL edge: virtualinvoke r0.<m: void b(java.lang.String)>($r1) in <m: void c(java.lang.String)> ==> <m: void b(java.lang.String)>
VIRTUAL edge: $r10 = virtualinvoke $r10.<java.lang.String: java.lang.String toString()>() in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.String: java.lang.String toString()>
SPECIAL edge: specialinvoke $r7.<org.json.JSONObject: void <init>(java.lang.String)>($r2) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <org.json.JSONObject: void <init>(java.lang.String)>
VIRTUAL edge: $r6 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r6) in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <org.json.JSONObject: java.lang.String getString(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("1") in <m: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void start()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<ad: void <init>()>() in <m: void <init>()> ==> <ad: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <ad: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <m: void <init>()> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $i0 = virtualinvoke $r1.<java.lang.String: int length()>() in <u: void a(android.content.Context,java.lang.String)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke $r4.<org.json.JSONObject: void <init>()>() in <r: void run()> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r5, $r1) in <r: void run()> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
VIRTUAL edge: $r2 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String toString()>() in <r: void run()> ==> <org.json.JSONObject: java.lang.String toString()>
SPECIAL edge: specialinvoke $r2.<r: void <init>(ssxodv.jdipue.wltter.SrvKlog)>(r0) in <ssxodv.jdipue.wltter.SrvKlog: void onCreate()> ==> <r: void <init>(ssxodv.jdipue.wltter.SrvKlog)>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.IMService: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.IMService dummyMainMethod_ssxodv_jdipue_wltter_IMService(android.content.Intent)> ==> <ssxodv.jdipue.wltter.IMService: void <init>()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)>(null, 0, 0) in <dummyMainClass: ssxodv.jdipue.wltter.IMService dummyMainMethod_ssxodv_jdipue_wltter_IMService(android.content.Intent)> ==> <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.IMService: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.IMService dummyMainMethod_ssxodv_jdipue_wltter_IMService(android.content.Intent)> ==> <ssxodv.jdipue.wltter.IMService: android.os.IBinder onBind(android.content.Intent)>
CLINIT edge: $r6 = <j: java.lang.String q> in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <j: void <clinit>()>
STATIC edge: staticinvoke <u: void a(android.content.Context,java.lang.String)>($r11, $r6) in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <u: void a(android.content.Context,java.lang.String)>
CLINIT edge: $r13 = newarray (java.lang.String)[0] in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r9 = new org.json.JSONObject in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <org.json.JSONObject: void <clinit>()>
VIRTUAL edge: parameter0 = virtualinvoke this.<ssxodv.jdipue.wltter.IMService: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.IMService: android.os.IBinder onBind(android.content.Intent)> ==> <ssxodv.jdipue.wltter.IMService: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r12.<l: void <init>(ssxodv.jdipue.wltter.IMService)>(r0) in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <l: void <init>(ssxodv.jdipue.wltter.IMService)>
ASYNCTASK edge: virtualinvoke $r12.<l: android.os.AsyncTask execute(java.lang.Object[])>($r13) in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <l: java.lang.Object doInBackground(java.lang.Object[])>
VIRTUAL edge: $r1 = virtualinvoke r0.<l: java.lang.String a(java.lang.String[])>($r3) in <l: java.lang.Object doInBackground(java.lang.Object[])> ==> <l: java.lang.String a(java.lang.String[])>
STATIC edge: staticinvoke <java.lang.Thread: void sleep(long)>(1000L) in <l: java.lang.String a(java.lang.String[])> ==> <java.lang.Thread: void sleep(long)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void sleep(long)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r9.<org.json.JSONObject: void <init>()>() in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r10, $r2) in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
VIRTUAL edge: $r6 = virtualinvoke $r9.<org.json.JSONObject: java.lang.String toString()>() in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <org.json.JSONObject: java.lang.String toString()>
VIRTUAL edge: $r1 = virtualinvoke r0.<ssxodv.jdipue.wltter.IMService: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.IMService: int onStartCommand(android.content.Intent,int,int)> ==> <ssxodv.jdipue.wltter.IMService: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.SrvAdm: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.SrvAdm dummyMainMethod_ssxodv_jdipue_wltter_SrvAdm(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvAdm: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvAdm: void onCreate()>() in <dummyMainClass: ssxodv.jdipue.wltter.SrvAdm dummyMainMethod_ssxodv_jdipue_wltter_SrvAdm(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvAdm: void onCreate()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvAdm: int onStartCommand(android.content.Intent,int,int)>(null, 0, 0) in <dummyMainClass: ssxodv.jdipue.wltter.SrvAdm dummyMainMethod_ssxodv_jdipue_wltter_SrvAdm(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvAdm: int onStartCommand(android.content.Intent,int,int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvAdm: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.SrvAdm dummyMainMethod_ssxodv_jdipue_wltter_SrvAdm(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvAdm: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: parameter0 = virtualinvoke this.<ssxodv.jdipue.wltter.SrvAdm: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.SrvAdm: android.os.IBinder onBind(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvAdm: android.content.Intent getIntent()>
VIRTUAL edge: $r1 = virtualinvoke r0.<ssxodv.jdipue.wltter.SrvAdm: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.SrvAdm: int onStartCommand(android.content.Intent,int,int)> ==> <ssxodv.jdipue.wltter.SrvAdm: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke $r1.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r2, 10L, 100L) in <ssxodv.jdipue.wltter.SrvAdm: void onCreate()> ==> <java.util.Timer: void schedule(java.util.TimerTask,long,long)>
SPECIAL edge: specialinvoke $r2.<q: void <init>(ssxodv.jdipue.wltter.SrvAdm)>(r0) in <ssxodv.jdipue.wltter.SrvAdm: void onCreate()> ==> <q: void <init>(ssxodv.jdipue.wltter.SrvAdm)>
VIRTUAL edge: virtualinvoke param0.<java.util.TimerTask: void run()>() in <java.util.Timer: void schedule(java.util.TimerTask,long,long)> ==> <q: void run()>
STATIC edge: staticinvoke <u: void a(android.content.Context)>($r1) in <q: void run()> ==> <u: void a(android.content.Context)>
CLINIT edge: $r7 = <j: java.lang.String am> in <u: void a(android.content.Context)> ==> <j: void <clinit>()>
STATIC edge: staticinvoke <u: void g(android.content.Context)>($r0) in <u: void a(android.content.Context)> ==> <u: void g(android.content.Context)>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.IMMon: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.IMMon dummyMainMethod_ssxodv_jdipue_wltter_IMMon(android.content.Intent)> ==> <ssxodv.jdipue.wltter.IMMon: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.IMMon: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.IMMon dummyMainMethod_ssxodv_jdipue_wltter_IMMon(android.content.Intent)> ==> <ssxodv.jdipue.wltter.IMMon: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.IMMon: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.IMMon: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.IMMon: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke r0.<ssxodv.jdipue.wltter.IMMon: void a(android.os.Bundle,android.content.Context)>($r5, $r1) in <ssxodv.jdipue.wltter.IMMon: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.IMMon: void a(android.os.Bundle,android.content.Context)>
CLINIT edge: $r5 = <j: java.lang.String o> in <ssxodv.jdipue.wltter.IMMon: void a(android.os.Bundle,android.content.Context)> ==> <j: void <clinit>()>
VIRTUAL edge: $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r10, "") in <ssxodv.jdipue.wltter.IMMon: void a(android.os.Bundle,android.content.Context)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r3.<k: void <init>(ssxodv.jdipue.wltter.IMMon)>(r0) in <ssxodv.jdipue.wltter.IMMon: void a(android.os.Bundle,android.content.Context)> ==> <k: void <init>(ssxodv.jdipue.wltter.IMMon)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <k: void <init>(ssxodv.jdipue.wltter.IMMon)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $r5 = specialinvoke r0.<ssxodv.jdipue.wltter.IMMon: java.lang.String a(android.telephony.SmsMessage[])>($r4) in <ssxodv.jdipue.wltter.IMMon: void a(android.os.Bundle,android.content.Context)> ==> <ssxodv.jdipue.wltter.IMMon: java.lang.String a(android.telephony.SmsMessage[])>
VIRTUAL edge: $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toString()>() in <ssxodv.jdipue.wltter.IMMon: java.lang.String a(android.telephony.SmsMessage[])> ==> <java.lang.String: java.lang.String toString()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.HeadlessSmsSendService: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.HeadlessSmsSendService dummyMainMethod_ssxodv_jdipue_wltter_HeadlessSmsSendService(android.content.Intent)> ==> <ssxodv.jdipue.wltter.HeadlessSmsSendService: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.HeadlessSmsSendService: void onHandleIntent(android.content.Intent)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.HeadlessSmsSendService dummyMainMethod_ssxodv_jdipue_wltter_HeadlessSmsSendService(android.content.Intent)> ==> <ssxodv.jdipue.wltter.HeadlessSmsSendService: void onHandleIntent(android.content.Intent)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.HeadlessSmsSendService: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.HeadlessSmsSendService dummyMainMethod_ssxodv_jdipue_wltter_HeadlessSmsSendService(android.content.Intent)> ==> <ssxodv.jdipue.wltter.HeadlessSmsSendService: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: parameter0 = virtualinvoke this.<ssxodv.jdipue.wltter.HeadlessSmsSendService: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.HeadlessSmsSendService: android.os.IBinder onBind(android.content.Intent)> ==> <ssxodv.jdipue.wltter.HeadlessSmsSendService: android.content.Intent getIntent()>
VIRTUAL edge: $r1 = virtualinvoke r0.<ssxodv.jdipue.wltter.HeadlessSmsSendService: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.HeadlessSmsSendService: void onHandleIntent(android.content.Intent)> ==> <ssxodv.jdipue.wltter.HeadlessSmsSendService: android.content.Intent getIntent()>
VIRTUAL edge: $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>() in <ssxodv.jdipue.wltter.HeadlessSmsSendService: void <init>()> ==> <java.lang.Class: java.lang.String getName()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.String getName()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.SrvProcMon: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.SrvProcMon dummyMainMethod_ssxodv_jdipue_wltter_SrvProcMon(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvProcMon: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvProcMon: void onCreate()>() in <dummyMainClass: ssxodv.jdipue.wltter.SrvProcMon dummyMainMethod_ssxodv_jdipue_wltter_SrvProcMon(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvProcMon: void onCreate()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvProcMon: int onStartCommand(android.content.Intent,int,int)>(null, 0, 0) in <dummyMainClass: ssxodv.jdipue.wltter.SrvProcMon dummyMainMethod_ssxodv_jdipue_wltter_SrvProcMon(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvProcMon: int onStartCommand(android.content.Intent,int,int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvProcMon: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.SrvProcMon dummyMainMethod_ssxodv_jdipue_wltter_SrvProcMon(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvProcMon: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: parameter0 = virtualinvoke this.<ssxodv.jdipue.wltter.SrvProcMon: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.SrvProcMon: android.os.IBinder onBind(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvProcMon: android.content.Intent getIntent()>
VIRTUAL edge: $r1 = virtualinvoke r0.<ssxodv.jdipue.wltter.SrvProcMon: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.SrvProcMon: int onStartCommand(android.content.Intent,int,int)> ==> <ssxodv.jdipue.wltter.SrvProcMon: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke $r1.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r2, 1000L, 3000L) in <ssxodv.jdipue.wltter.SrvProcMon: void onCreate()> ==> <java.util.Timer: void schedule(java.util.TimerTask,long,long)>
SPECIAL edge: specialinvoke $r2.<t: void <init>(ssxodv.jdipue.wltter.SrvProcMon)>(r0) in <ssxodv.jdipue.wltter.SrvProcMon: void onCreate()> ==> <t: void <init>(ssxodv.jdipue.wltter.SrvProcMon)>
VIRTUAL edge: virtualinvoke param0.<java.util.TimerTask: void run()>() in <java.util.Timer: void schedule(java.util.TimerTask,long,long)> ==> <t: void run()>
CLINIT edge: $r9 = <j: java.lang.String aM> in <t: void run()> ==> <j: void <clinit>()>
STATIC edge: staticinvoke <u: void h(android.content.Context)>($r2) in <t: void run()> ==> <u: void h(android.content.Context)>
STATIC edge: $i0 = staticinvoke <y: int a(android.content.Context,java.lang.String)>($r2, $r9) in <t: void run()> ==> <y: int a(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.MmsReceiver: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.MmsReceiver dummyMainMethod_ssxodv_jdipue_wltter_MmsReceiver(android.content.Intent)> ==> <ssxodv.jdipue.wltter.MmsReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.MmsReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.MmsReceiver dummyMainMethod_ssxodv_jdipue_wltter_MmsReceiver(android.content.Intent)> ==> <ssxodv.jdipue.wltter.MmsReceiver: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.MmsReceiver: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.MmsReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.MmsReceiver: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.IntentReceiver: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.IntentReceiver dummyMainMethod_ssxodv_jdipue_wltter_IntentReceiver(android.content.Intent)> ==> <ssxodv.jdipue.wltter.IntentReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.IntentReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.IntentReceiver dummyMainMethod_ssxodv_jdipue_wltter_IntentReceiver(android.content.Intent)> ==> <ssxodv.jdipue.wltter.IntentReceiver: void onReceive(android.content.Context,android.content.Intent)>
STATIC edge: staticinvoke <u: void b(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.IntentReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void b(android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.IntentReceiver: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.IntentReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.IntentReceiver: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.AlarmReceiverSmsMan: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverSmsMan dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverSmsMan(android.content.Intent)> ==> <ssxodv.jdipue.wltter.AlarmReceiverSmsMan: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.AlarmReceiverSmsMan: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverSmsMan dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverSmsMan(android.content.Intent)> ==> <ssxodv.jdipue.wltter.AlarmReceiverSmsMan: void onReceive(android.content.Context,android.content.Intent)>
STATIC edge: $i0 = staticinvoke <u: int a(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.AlarmReceiverSmsMan: void onReceive(android.content.Context,android.content.Intent)> ==> <u: int a(android.content.Context)>
STATIC edge: staticinvoke <ab: void a(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.AlarmReceiverSmsMan: void onReceive(android.content.Context,android.content.Intent)> ==> <ab: void a(android.content.Context)>
CLINIT edge: $r7 = <j: java.lang.String am> in <ab: void a(android.content.Context)> ==> <j: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<i: void <init>(ssxodv.jdipue.wltter.AlarmReceiverSmsMan,long,long,android.content.Context)>(r0, 55000L, 1000L, $r1) in <ssxodv.jdipue.wltter.AlarmReceiverSmsMan: void onReceive(android.content.Context,android.content.Intent)> ==> <i: void <init>(ssxodv.jdipue.wltter.AlarmReceiverSmsMan,long,long,android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.AlarmReceiverSmsMan: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.AlarmReceiverSmsMan: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.AlarmReceiverSmsMan: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.Activity1: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.Activity1 dummyMainMethod_ssxodv_jdipue_wltter_Activity1(android.content.Intent)> ==> <ssxodv.jdipue.wltter.Activity1: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.Activity1 dummyMainMethod_ssxodv_jdipue_wltter_Activity1(android.content.Intent)> ==> <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)>
CLINIT edge: $r2 = <j: java.lang.String d> in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <j: void <clinit>()>
STATIC edge: staticinvoke <u: void c(android.content.Context)>($r3) in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <u: void c(android.content.Context)>
STATIC edge: staticinvoke <u: void e(android.content.Context)>($r3) in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <u: void e(android.content.Context)>
STATIC edge: staticinvoke <u: void f(android.content.Context)>($r3) in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <u: void f(android.content.Context)>
STATIC edge: staticinvoke <u: void d(android.content.Context)>($r3) in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <u: void d(android.content.Context)>
STATIC edge: staticinvoke <u: void b(android.content.Context)>($r3) in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <u: void b(android.content.Context)>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,int)>($r3, $r2, 0) in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <y: void a(android.content.Context,java.lang.String,int)>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,java.lang.String)>($r3, $r2, $r4) in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <y: void a(android.content.Context,java.lang.String,java.lang.String)>
STATIC edge: $z0 = staticinvoke <u: boolean a(android.content.Context)>($r3) in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <u: boolean a(android.content.Context)>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>($r3, "1", $r4, $r2) in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <y: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
STATIC edge: $r4 = staticinvoke <y: java.lang.String a()>() in <ssxodv.jdipue.wltter.Activity1: void onCreate(android.os.Bundle)> ==> <y: java.lang.String a()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.ActivityWeb: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.ActivityWeb dummyMainMethod_ssxodv_jdipue_wltter_ActivityWeb(android.content.Intent)> ==> <ssxodv.jdipue.wltter.ActivityWeb: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.ActivityWeb: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityWeb dummyMainMethod_ssxodv_jdipue_wltter_ActivityWeb(android.content.Intent)> ==> <ssxodv.jdipue.wltter.ActivityWeb: void onCreate(android.os.Bundle)>
STATIC edge: $r7 = staticinvoke <y: java.lang.String b(android.content.Context,java.lang.String)>($r6, $r7) in <ssxodv.jdipue.wltter.ActivityWeb: void onCreate(android.os.Bundle)> ==> <y: java.lang.String b(android.content.Context,java.lang.String)>
CLINIT edge: $r7 = <j: java.lang.String aO> in <ssxodv.jdipue.wltter.ActivityWeb: void onCreate(android.os.Bundle)> ==> <j: void <clinit>()>
VIRTUAL edge: $i0 = virtualinvoke $r8.<java.lang.String: int length()>() in <ssxodv.jdipue.wltter.ActivityWeb: void onCreate(android.os.Bundle)> ==> <java.lang.String: int length()>
VIRTUAL edge: $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r8, $r10) in <ssxodv.jdipue.wltter.ActivityWeb: void onCreate(android.os.Bundle)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke r0.<ssxodv.jdipue.wltter.ActivityWeb: void a(android.webkit.WebView)>($r5) in <ssxodv.jdipue.wltter.ActivityWeb: void onCreate(android.os.Bundle)> ==> <ssxodv.jdipue.wltter.ActivityWeb: void a(android.webkit.WebView)>
VIRTUAL edge: $r10 = virtualinvoke r0.<ssxodv.jdipue.wltter.ActivityWeb: java.lang.String a()>() in <ssxodv.jdipue.wltter.ActivityWeb: void onCreate(android.os.Bundle)> ==> <ssxodv.jdipue.wltter.ActivityWeb: java.lang.String a()>
STATIC edge: $r2 = staticinvoke <ssxodv.jdipue.wltter.ActivityWeb: java.lang.String a(int,int)>(0, 9) in <ssxodv.jdipue.wltter.ActivityWeb: java.lang.String a()> ==> <ssxodv.jdipue.wltter.ActivityWeb: java.lang.String a(int,int)>
CLINIT edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <ssxodv.jdipue.wltter.ActivityWeb: java.lang.String a(int,int)> ==> <java.lang.Integer: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0) in <ssxodv.jdipue.wltter.ActivityWeb: java.lang.String a(int,int)> ==> <java.lang.Integer: java.lang.Integer valueOf(int)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.Integer valueOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r5.<a: void <init>(ssxodv.jdipue.wltter.ActivityCard)>($r0) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <a: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
VIRTUAL edge: virtualinvoke $r5.<a: void afterTextChanged(android.text.Editable)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <a: void afterTextChanged(android.text.Editable)>
SPECIAL edge: $z0 = specialinvoke r0.<a: boolean a(android.text.Editable,int,int,char)>($r1, 19, 5, 45) in <a: void afterTextChanged(android.text.Editable)> ==> <a: boolean a(android.text.Editable,int,int,char)>
SPECIAL edge: $r2 = specialinvoke r0.<a: char[] a(android.text.Editable,int)>($r1, 16) in <a: void afterTextChanged(android.text.Editable)> ==> <a: char[] a(android.text.Editable,int)>
SPECIAL edge: $r3 = specialinvoke r0.<a: java.lang.String a(char[],int,char)>($r2, 4, 45) in <a: void afterTextChanged(android.text.Editable)> ==> <a: java.lang.String a(char[],int,char)>
CLINIT edge: $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <a: boolean a(android.text.Editable,int,int,char)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <a: boolean a(android.text.Editable,int,int,char)> ==> <java.lang.Character: boolean isDigit(char)>
CLINIT edge: $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <a: char[] a(android.text.Editable,int)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <a: char[] a(android.text.Editable,int)> ==> <java.lang.Character: boolean isDigit(char)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Character: boolean isDigit(char)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <a: void <init>(ssxodv.jdipue.wltter.ActivityCard)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r4.<b: void <init>(ssxodv.jdipue.wltter.ActivityCard)>($r0) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <b: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
VIRTUAL edge: virtualinvoke $r4.<b: void afterTextChanged(android.text.Editable)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <b: void afterTextChanged(android.text.Editable)>
SPECIAL edge: $z0 = specialinvoke r0.<b: boolean a(android.text.Editable,int,int,char)>($r1, 2, 5, 45) in <b: void afterTextChanged(android.text.Editable)> ==> <b: boolean a(android.text.Editable,int,int,char)>
SPECIAL edge: $r2 = specialinvoke r0.<b: char[] a(android.text.Editable,int)>($r1, 2) in <b: void afterTextChanged(android.text.Editable)> ==> <b: char[] a(android.text.Editable,int)>
SPECIAL edge: $r3 = specialinvoke r0.<b: java.lang.String a(char[],int,char)>($r2, 4, 45) in <b: void afterTextChanged(android.text.Editable)> ==> <b: java.lang.String a(char[],int,char)>
CLINIT edge: $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <b: boolean a(android.text.Editable,int,int,char)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <b: boolean a(android.text.Editable,int,int,char)> ==> <java.lang.Character: boolean isDigit(char)>
CLINIT edge: $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <b: char[] a(android.text.Editable,int)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <b: char[] a(android.text.Editable,int)> ==> <java.lang.Character: boolean isDigit(char)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <b: void <init>(ssxodv.jdipue.wltter.ActivityCard)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r3.<c: void <init>(ssxodv.jdipue.wltter.ActivityCard)>($r0) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <c: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
VIRTUAL edge: virtualinvoke $r3.<c: void afterTextChanged(android.text.Editable)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <c: void afterTextChanged(android.text.Editable)>
SPECIAL edge: $z0 = specialinvoke r0.<c: boolean a(android.text.Editable,int,int,char)>($r1, 4, 5, 45) in <c: void afterTextChanged(android.text.Editable)> ==> <c: boolean a(android.text.Editable,int,int,char)>
SPECIAL edge: $r2 = specialinvoke r0.<c: char[] a(android.text.Editable,int)>($r1, 4) in <c: void afterTextChanged(android.text.Editable)> ==> <c: char[] a(android.text.Editable,int)>
SPECIAL edge: $r3 = specialinvoke r0.<c: java.lang.String a(char[],int,char)>($r2, 4, 45) in <c: void afterTextChanged(android.text.Editable)> ==> <c: java.lang.String a(char[],int,char)>
CLINIT edge: $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <c: boolean a(android.text.Editable,int,int,char)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <c: boolean a(android.text.Editable,int,int,char)> ==> <java.lang.Character: boolean isDigit(char)>
CLINIT edge: $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <c: char[] a(android.text.Editable,int)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <c: char[] a(android.text.Editable,int)> ==> <java.lang.Character: boolean isDigit(char)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <c: void <init>(ssxodv.jdipue.wltter.ActivityCard)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r2.<d: void <init>(ssxodv.jdipue.wltter.ActivityCard)>($r0) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <d: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
VIRTUAL edge: virtualinvoke $r2.<d: void afterTextChanged(android.text.Editable)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <d: void afterTextChanged(android.text.Editable)>
SPECIAL edge: $z0 = specialinvoke r0.<d: boolean a(android.text.Editable,int,int,char)>($r1, 3, 5, 45) in <d: void afterTextChanged(android.text.Editable)> ==> <d: boolean a(android.text.Editable,int,int,char)>
SPECIAL edge: $r2 = specialinvoke r0.<d: char[] a(android.text.Editable,int)>($r1, 3) in <d: void afterTextChanged(android.text.Editable)> ==> <d: char[] a(android.text.Editable,int)>
SPECIAL edge: $r3 = specialinvoke r0.<d: java.lang.String a(char[],int,char)>($r2, 4, 45) in <d: void afterTextChanged(android.text.Editable)> ==> <d: java.lang.String a(char[],int,char)>
CLINIT edge: $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <d: boolean a(android.text.Editable,int,int,char)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <d: boolean a(android.text.Editable,int,int,char)> ==> <java.lang.Character: boolean isDigit(char)>
CLINIT edge: $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <d: char[] a(android.text.Editable,int)> ==> <java.lang.Character: void <clinit>()>
STATIC edge: $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4) in <d: char[] a(android.text.Editable,int)> ==> <java.lang.Character: boolean isDigit(char)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <d: void <init>(ssxodv.jdipue.wltter.ActivityCard)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<e: void <init>(ssxodv.jdipue.wltter.ActivityCard)>($r0) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <e: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
VIRTUAL edge: virtualinvoke $r1.<e: void onClick(android.view.View)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <e: void onClick(android.view.View)>
CLINIT edge: $r2 = new org.json.JSONObject in <e: void onClick(android.view.View)> ==> <org.json.JSONObject: void <clinit>()>
STATIC edge: $r18 = staticinvoke <ssxodv.jdipue.wltter.ActivityCard: android.widget.EditText d(ssxodv.jdipue.wltter.ActivityCard)>($r3) in <e: void onClick(android.view.View)> ==> <ssxodv.jdipue.wltter.ActivityCard: android.widget.EditText d(ssxodv.jdipue.wltter.ActivityCard)>
STATIC edge: $r18 = staticinvoke <ssxodv.jdipue.wltter.ActivityCard: android.widget.EditText c(ssxodv.jdipue.wltter.ActivityCard)>($r3) in <e: void onClick(android.view.View)> ==> <ssxodv.jdipue.wltter.ActivityCard: android.widget.EditText c(ssxodv.jdipue.wltter.ActivityCard)>
STATIC edge: $r18 = staticinvoke <ssxodv.jdipue.wltter.ActivityCard: android.widget.EditText b(ssxodv.jdipue.wltter.ActivityCard)>($r3) in <e: void onClick(android.view.View)> ==> <ssxodv.jdipue.wltter.ActivityCard: android.widget.EditText b(ssxodv.jdipue.wltter.ActivityCard)>
STATIC edge: $r18 = staticinvoke <ssxodv.jdipue.wltter.ActivityCard: android.widget.EditText a(ssxodv.jdipue.wltter.ActivityCard)>($r3) in <e: void onClick(android.view.View)> ==> <ssxodv.jdipue.wltter.ActivityCard: android.widget.EditText a(ssxodv.jdipue.wltter.ActivityCard)>
STATIC edge: staticinvoke <u: void a(android.content.Context,java.lang.String)>($r17, $r10) in <e: void onClick(android.view.View)> ==> <u: void a(android.content.Context,java.lang.String)>
STATIC edge: staticinvoke <y: void a(android.content.Context,java.lang.String,int)>($r17, $r10, 2) in <e: void onClick(android.view.View)> ==> <y: void a(android.content.Context,java.lang.String,int)>
STATIC edge: $r16 = staticinvoke <ssxodv.jdipue.wltter.ActivityCard: android.text.TextWatcher d(ssxodv.jdipue.wltter.ActivityCard)>($r3) in <e: void onClick(android.view.View)> ==> <ssxodv.jdipue.wltter.ActivityCard: android.text.TextWatcher d(ssxodv.jdipue.wltter.ActivityCard)>
STATIC edge: $r16 = staticinvoke <ssxodv.jdipue.wltter.ActivityCard: android.text.TextWatcher c(ssxodv.jdipue.wltter.ActivityCard)>($r3) in <e: void onClick(android.view.View)> ==> <ssxodv.jdipue.wltter.ActivityCard: android.text.TextWatcher c(ssxodv.jdipue.wltter.ActivityCard)>
STATIC edge: $r16 = staticinvoke <ssxodv.jdipue.wltter.ActivityCard: android.text.TextWatcher b(ssxodv.jdipue.wltter.ActivityCard)>($r3) in <e: void onClick(android.view.View)> ==> <ssxodv.jdipue.wltter.ActivityCard: android.text.TextWatcher b(ssxodv.jdipue.wltter.ActivityCard)>
STATIC edge: $r16 = staticinvoke <ssxodv.jdipue.wltter.ActivityCard: android.text.TextWatcher a(ssxodv.jdipue.wltter.ActivityCard)>($r3) in <e: void onClick(android.view.View)> ==> <ssxodv.jdipue.wltter.ActivityCard: android.text.TextWatcher a(ssxodv.jdipue.wltter.ActivityCard)>
STATIC edge: $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11) in <e: void onClick(android.view.View)> ==> <java.lang.Integer: int parseInt(java.lang.String)>
STATIC edge: $z1 = staticinvoke <z: boolean a(java.lang.String)>($r13) in <e: void onClick(android.view.View)> ==> <z: boolean a(java.lang.String)>
CLINIT edge: $r10 = <j: java.lang.String aM> in <e: void onClick(android.view.View)> ==> <j: void <clinit>()>
CLINIT edge: $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r10) in <e: void onClick(android.view.View)> ==> <java.lang.Integer: void <clinit>()>
VIRTUAL edge: $i0 = virtualinvoke $r10.<java.lang.String: int length()>() in <e: void onClick(android.view.View)> ==> <java.lang.String: int length()>
VIRTUAL edge: $r13 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "") in <e: void onClick(android.view.View)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r2.<org.json.JSONObject: void <init>()>() in <e: void onClick(android.view.View)> ==> <org.json.JSONObject: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r13, $r14) in <e: void onClick(android.view.View)> ==> <org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>
VIRTUAL edge: $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>() in <e: void onClick(android.view.View)> ==> <org.json.JSONObject: java.lang.String toString()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <e: void <init>(ssxodv.jdipue.wltter.ActivityCard)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.ActivityCard: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <ssxodv.jdipue.wltter.ActivityCard: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.ActivityCard: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.ActivityCard dummyMainMethod_ssxodv_jdipue_wltter_ActivityCard(android.content.Intent)> ==> <ssxodv.jdipue.wltter.ActivityCard: void onCreate(android.os.Bundle)>
CLINIT edge: $r6 = <j: java.lang.String aH> in <ssxodv.jdipue.wltter.ActivityCard: void onCreate(android.os.Bundle)> ==> <j: void <clinit>()>
SPECIAL edge: specialinvoke $r22.<e: void <init>(ssxodv.jdipue.wltter.ActivityCard)>(r0) in <ssxodv.jdipue.wltter.ActivityCard: void onCreate(android.os.Bundle)> ==> <e: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
SPECIAL edge: specialinvoke $r20.<d: void <init>(ssxodv.jdipue.wltter.ActivityCard)>(r0) in <ssxodv.jdipue.wltter.ActivityCard: void onCreate(android.os.Bundle)> ==> <d: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
SPECIAL edge: specialinvoke $r19.<c: void <init>(ssxodv.jdipue.wltter.ActivityCard)>(r0) in <ssxodv.jdipue.wltter.ActivityCard: void onCreate(android.os.Bundle)> ==> <c: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
SPECIAL edge: specialinvoke $r18.<b: void <init>(ssxodv.jdipue.wltter.ActivityCard)>(r0) in <ssxodv.jdipue.wltter.ActivityCard: void onCreate(android.os.Bundle)> ==> <b: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
SPECIAL edge: specialinvoke $r17.<a: void <init>(ssxodv.jdipue.wltter.ActivityCard)>(r0) in <ssxodv.jdipue.wltter.ActivityCard: void onCreate(android.os.Bundle)> ==> <a: void <init>(ssxodv.jdipue.wltter.ActivityCard)>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.AlarmReceiverAdm: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverAdm dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverAdm(android.content.Intent)> ==> <ssxodv.jdipue.wltter.AlarmReceiverAdm: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.AlarmReceiverAdm: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverAdm dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverAdm(android.content.Intent)> ==> <ssxodv.jdipue.wltter.AlarmReceiverAdm: void onReceive(android.content.Context,android.content.Intent)>
STATIC edge: staticinvoke <u: void a(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.AlarmReceiverAdm: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void a(android.content.Context)>
SPECIAL edge: specialinvoke $r3.<g: void <init>(ssxodv.jdipue.wltter.AlarmReceiverAdm,long,long,android.content.Context)>(r0, 55000L, 100L, $r1) in <ssxodv.jdipue.wltter.AlarmReceiverAdm: void onReceive(android.content.Context,android.content.Intent)> ==> <g: void <init>(ssxodv.jdipue.wltter.AlarmReceiverAdm,long,long,android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.AlarmReceiverAdm: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.AlarmReceiverAdm: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.AlarmReceiverAdm: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.MAC: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.MAC dummyMainMethod_ssxodv_jdipue_wltter_MAC(android.content.Intent)> ==> <ssxodv.jdipue.wltter.MAC: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.MAC: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.MAC dummyMainMethod_ssxodv_jdipue_wltter_MAC(android.content.Intent)> ==> <ssxodv.jdipue.wltter.MAC: void onCreate(android.os.Bundle)>
CLINIT edge: $r6 = <j: java.lang.String aA> in <ssxodv.jdipue.wltter.MAC: void onCreate(android.os.Bundle)> ==> <j: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.AlarmReceiverKnock: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverKnock dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverKnock(android.content.Intent)> ==> <ssxodv.jdipue.wltter.AlarmReceiverKnock: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.AlarmReceiverKnock: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.AlarmReceiverKnock dummyMainMethod_ssxodv_jdipue_wltter_AlarmReceiverKnock(android.content.Intent)> ==> <ssxodv.jdipue.wltter.AlarmReceiverKnock: void onReceive(android.content.Context,android.content.Intent)>
STATIC edge: staticinvoke <u: void a(android.content.Context,java.lang.String)>($r1, "") in <ssxodv.jdipue.wltter.AlarmReceiverKnock: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void a(android.content.Context,java.lang.String)>
SPECIAL edge: specialinvoke $r3.<h: void <init>(ssxodv.jdipue.wltter.AlarmReceiverKnock,long,long,android.content.Context)>(r0, 55000L, 5000L, $r1) in <ssxodv.jdipue.wltter.AlarmReceiverKnock: void onReceive(android.content.Context,android.content.Intent)> ==> <h: void <init>(ssxodv.jdipue.wltter.AlarmReceiverKnock,long,long,android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.AlarmReceiverKnock: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.AlarmReceiverKnock: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.AlarmReceiverKnock: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.BootReciv: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.BootReciv dummyMainMethod_ssxodv_jdipue_wltter_BootReciv(android.content.Intent)> ==> <ssxodv.jdipue.wltter.BootReciv: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.BootReciv: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: ssxodv.jdipue.wltter.BootReciv dummyMainMethod_ssxodv_jdipue_wltter_BootReciv(android.content.Intent)> ==> <ssxodv.jdipue.wltter.BootReciv: void onReceive(android.content.Context,android.content.Intent)>
STATIC edge: $z0 = staticinvoke <u: boolean a(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.BootReciv: void onReceive(android.content.Context,android.content.Intent)> ==> <u: boolean a(android.content.Context)>
STATIC edge: staticinvoke <u: void c(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.BootReciv: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void c(android.content.Context)>
STATIC edge: staticinvoke <u: void e(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.BootReciv: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void e(android.content.Context)>
STATIC edge: staticinvoke <u: void f(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.BootReciv: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void f(android.content.Context)>
STATIC edge: staticinvoke <u: void d(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.BootReciv: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void d(android.content.Context)>
STATIC edge: staticinvoke <u: void b(android.content.Context)>($r1) in <ssxodv.jdipue.wltter.BootReciv: void onReceive(android.content.Context,android.content.Intent)> ==> <u: void b(android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke r0.<ssxodv.jdipue.wltter.BootReciv: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.BootReciv: void onReceive(android.content.Context,android.content.Intent)> ==> <ssxodv.jdipue.wltter.BootReciv: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<ssxodv.jdipue.wltter.SrvKnock: void <init>()>() in <dummyMainClass: ssxodv.jdipue.wltter.SrvKnock dummyMainMethod_ssxodv_jdipue_wltter_SrvKnock(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKnock: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvKnock: void onCreate()>() in <dummyMainClass: ssxodv.jdipue.wltter.SrvKnock dummyMainMethod_ssxodv_jdipue_wltter_SrvKnock(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKnock: void onCreate()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvKnock: int onStartCommand(android.content.Intent,int,int)>(null, 0, 0) in <dummyMainClass: ssxodv.jdipue.wltter.SrvKnock dummyMainMethod_ssxodv_jdipue_wltter_SrvKnock(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKnock: int onStartCommand(android.content.Intent,int,int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<ssxodv.jdipue.wltter.SrvKnock: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: ssxodv.jdipue.wltter.SrvKnock dummyMainMethod_ssxodv_jdipue_wltter_SrvKnock(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKnock: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: parameter0 = virtualinvoke this.<ssxodv.jdipue.wltter.SrvKnock: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.SrvKnock: android.os.IBinder onBind(android.content.Intent)> ==> <ssxodv.jdipue.wltter.SrvKnock: android.content.Intent getIntent()>
VIRTUAL edge: $r1 = virtualinvoke r0.<ssxodv.jdipue.wltter.SrvKnock: android.content.Intent getIntent()>() in <ssxodv.jdipue.wltter.SrvKnock: int onStartCommand(android.content.Intent,int,int)> ==> <ssxodv.jdipue.wltter.SrvKnock: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke $r1.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r2, 10000L, 10000L) in <ssxodv.jdipue.wltter.SrvKnock: void onCreate()> ==> <java.util.Timer: void schedule(java.util.TimerTask,long,long)>
SPECIAL edge: specialinvoke $r2.<s: void <init>(ssxodv.jdipue.wltter.SrvKnock)>(r0) in <ssxodv.jdipue.wltter.SrvKnock: void onCreate()> ==> <s: void <init>(ssxodv.jdipue.wltter.SrvKnock)>
VIRTUAL edge: virtualinvoke param0.<java.util.TimerTask: void run()>() in <java.util.Timer: void schedule(java.util.TimerTask,long,long)> ==> <s: void run()>
STATIC edge: staticinvoke <ab: void b(android.content.Context)>($r2) in <s: void run()> ==> <ab: void b(android.content.Context)>
STATIC edge: staticinvoke <u: void a(android.content.Context,java.lang.String)>($r2, "") in <s: void run()> ==> <u: void a(android.content.Context,java.lang.String)>
VIRTUAL edge: $r3 = virtualinvoke $r4.<ad: java.lang.String a(android.content.Context)>($r5) in <m: void run()> ==> <ad: java.lang.String a(android.content.Context)>
CLINIT edge: $r2 = <ad: java.lang.String a> in <ad: java.lang.String a(android.content.Context)> ==> <ad: void <clinit>()>
STATIC edge: $r2 = staticinvoke <ad: java.lang.String a(java.io.File)>($r3) in <ad: java.lang.String a(android.content.Context)> ==> <ad: java.lang.String a(java.io.File)>
STATIC edge: staticinvoke <ad: void a(java.io.File)>($r3) in <ad: java.lang.String a(android.content.Context)> ==> <ad: void a(java.io.File)>
CLINIT edge: $r3 = new java.lang.String in <ad: java.lang.String a(java.io.File)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r2) in <ad: java.lang.String a(java.io.File)> ==> <java.lang.String: void <init>(byte[])>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[])> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[])> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5) in <ad: java.lang.String a(android.content.Context)> ==> <java.lang.RuntimeException: void <init>(java.lang.Throwable)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.RuntimeException: void <init>(java.lang.Throwable)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.Throwable)> ==> <java.lang.Exception: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2) in <ab: int a(android.content.Context)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7) in <ab: void a(android.content.Context)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4) in <ssxodv.jdipue.wltter.IMMon: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
STATIC edge: staticinvoke <u: void a(android.content.Context)>($r1) in <g: void onTick(long)> ==> <u: void a(android.content.Context)>
STATIC edge: $i1 = staticinvoke <u: int a(android.content.Context)>($r1) in <i: void onTick(long)> ==> <u: int a(android.content.Context)>
STATIC edge: staticinvoke <u: void a(android.content.Context,java.lang.String)>($r1, "") in <h: void onTick(long)> ==> <u: void a(android.content.Context,java.lang.String)>
STATIC edge: staticinvoke <ab: void a(android.content.Context)>($r1) in <i: void onTick(long)> ==> <ab: void a(android.content.Context)>
VIRTUAL edge: virtualinvoke $r8.<java.lang.InterruptedException: void printStackTrace()>() in <l: java.lang.String a(java.lang.String[])> ==> <java.lang.Throwable: void printStackTrace()>
VIRTUAL edge: $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7) in <u: void a(android.content.Context)> ==> <java.lang.String: boolean equalsIgnoreCase(java.lang.String)>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4) in <u: boolean a(android.content.Context)> ==> <java.lang.String: boolean equals(java.lang.Object)>
VIRTUAL edge: virtualinvoke $r3.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>("network", 1L, 1.0F, r0) in <n: android.location.Location a()> ==> <n: void onProviderEnabled(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>("network", 1L, 1.0F, r0) in <n: android.location.Location a()> ==> <n: void onLocationChanged(android.location.Location)>
VIRTUAL edge: virtualinvoke $r3.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>("network", 1L, 1.0F, r0) in <n: android.location.Location a()> ==> <n: void onProviderDisabled(java.lang.String)>
VIRTUAL edge: virtualinvoke $r3.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>("network", 1L, 1.0F, r0) in <n: android.location.Location a()> ==> <n: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
VIRTUAL edge: $i0 = virtualinvoke $r6.<java.lang.String: int length()>() in <y: java.lang.String b(android.content.Context,java.lang.String)> ==> <java.lang.String: int length()>
