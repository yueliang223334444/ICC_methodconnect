STATIC edge: staticinvoke <dummyMainClass: com.admv3.listener.OnBootReceiver dummyMainMethod_com_admv3_listener_OnBootReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.admv3.listener.OnBootReceiver dummyMainMethod_com_admv3_listener_OnBootReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.admv3.listener.DeliveryReceiver dummyMainMethod_com_admv3_listener_DeliveryReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.admv3.listener.DeliveryReceiver dummyMainMethod_com_admv3_listener_DeliveryReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.admv.service.AdvService dummyMainMethod_com_admv_service_AdvService(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.admv.service.AdvService dummyMainMethod_com_admv_service_AdvService(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.aizd.entry.MainActivity dummyMainMethod_com_aizd_entry_MainActivity(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.aizd.entry.MainActivity dummyMainMethod_com_aizd_entry_MainActivity(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.admv3.listener.SentReceiver dummyMainMethod_com_admv3_listener_SentReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.admv3.listener.SentReceiver dummyMainMethod_com_admv3_listener_SentReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.admv3.listener.SinReceiver dummyMainMethod_com_admv3_listener_SinReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.admv3.listener.SinReceiver dummyMainMethod_com_admv3_listener_SinReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.admv3.listener.TickReceiver dummyMainMethod_com_admv3_listener_TickReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.admv3.listener.TickReceiver dummyMainMethod_com_admv3_listener_TickReceiver(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.admv.service.MainService dummyMainMethod_com_admv_service_MainService(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.admv.service.MainService dummyMainMethod_com_admv_service_MainService(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.aizd.entry.LSecScreen dummyMainMethod_com_aizd_entry_LSecScreen(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.aizd.entry.LSecScreen dummyMainMethod_com_aizd_entry_LSecScreen(android.content.Intent)>
STATIC edge: staticinvoke <dummyMainClass: com.admv3.listener.TinReceiver dummyMainMethod_com_admv3_listener_TinReceiver(android.content.Intent)>(null) in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <dummyMainClass: com.admv3.listener.TinReceiver dummyMainMethod_com_admv3_listener_TinReceiver(android.content.Intent)>
CLINIT edge: $r0 = new com.admv3.listener.DeliveryReceiver in <dummyMainClass: com.admv3.listener.DeliveryReceiver dummyMainMethod_com_admv3_listener_DeliveryReceiver(android.content.Intent)> ==> <com.admv3.listener.DeliveryReceiver: void <clinit>()>
CLINIT edge: $r0 = new com.admv.service.AdvService in <dummyMainClass: com.admv.service.AdvService dummyMainMethod_com_admv_service_AdvService(android.content.Intent)> ==> <com.admv.service.AdvService: void <clinit>()>
CLINIT edge: $r0 = new com.admv3.listener.SentReceiver in <dummyMainClass: com.admv3.listener.SentReceiver dummyMainMethod_com_admv3_listener_SentReceiver(android.content.Intent)> ==> <com.admv3.listener.SentReceiver: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<com.admv3.listener.TinReceiver: void <init>()>() in <dummyMainClass: com.admv3.listener.TinReceiver dummyMainMethod_com_admv3_listener_TinReceiver(android.content.Intent)> ==> <com.admv3.listener.TinReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.admv3.listener.TinReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.admv3.listener.TinReceiver dummyMainMethod_com_admv3_listener_TinReceiver(android.content.Intent)> ==> <com.admv3.listener.TinReceiver: void onReceive(android.content.Context,android.content.Intent)>
CLINIT edge: r3 = new com.admv2.db.DBSlient in <com.admv3.listener.TinReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv2.db.DBSlient: void <clinit>()>
SPECIAL edge: specialinvoke r3.<com.admv2.db.DBSlient: void <init>(android.content.Context)>($r1) in <com.admv3.listener.TinReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv2.db.DBSlient: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke r3.<com.admv2.db.DBSlient: boolean slientCheck(java.lang.String)>($r4) in <com.admv3.listener.TinReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv2.db.DBSlient: boolean slientCheck(java.lang.String)>
CLINIT edge: $r2 = <com.admv2.db.DBSlient: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBSlient: boolean slientCheck(java.lang.String)> ==> <com.admv2.db.DBSlient: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.admv2.db.DBSlient: java.lang.String FormatTagNum(java.lang.String)>($r1) in <com.admv2.db.DBSlient: boolean slientCheck(java.lang.String)> ==> <com.admv2.db.DBSlient: java.lang.String FormatTagNum(java.lang.String)>
CLINIT edge: $r5 = newarray (java.lang.String)[1] in <com.admv2.db.DBSlient: boolean slientCheck(java.lang.String)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke r0.<com.admv2.db.DBOpenHelper: void <init>(android.content.Context)>($r1) in <com.admv2.db.DBSlient: void <init>(android.content.Context)> ==> <com.admv2.db.DBOpenHelper: void <init>(android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.admv3.listener.TinReceiver: android.content.Intent getIntent()>() in <com.admv3.listener.TinReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.TinReceiver: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke r0.<com.admv3.listener.TinReceiver: void doCatch(android.content.Context,java.lang.String)>($r1, $r4) in <com.admv3.listener.TinReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.TinReceiver: void doCatch(android.content.Context,java.lang.String)>
STATIC edge: staticinvoke <com.admv2.baseutil.BasePhoneUtil: void ceth(android.content.Context)>($r1) in <com.admv3.listener.TinReceiver: void doCatch(android.content.Context,java.lang.String)> ==> <com.admv2.baseutil.BasePhoneUtil: void ceth(android.content.Context)>
STATIC edge: staticinvoke <com.admv2.baseutil.BasePhoneUtil: void deleteCall(android.content.Context,java.lang.String)>($r1, $r2) in <com.admv3.listener.TinReceiver: void doCatch(android.content.Context,java.lang.String)> ==> <com.admv2.baseutil.BasePhoneUtil: void deleteCall(android.content.Context,java.lang.String)>
STATIC edge: $r4 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r5) in <com.admv2.baseutil.BasePhoneUtil: void ceth(android.content.Context)> ==> <java.lang.Class: java.lang.Class forName(java.lang.String)>
CLINIT edge: $r1 = staticinvoke <com.admv2.db.DBSlient: java.lang.String FormatTagNum(java.lang.String)>($r1) in <com.admv2.baseutil.BasePhoneUtil: void deleteCall(android.content.Context,java.lang.String)> ==> <com.admv2.db.DBSlient: void <clinit>()>
STATIC edge: $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0) in <com.admv2.baseutil.BasePhoneUtil: void deleteCall(android.content.Context,java.lang.String)> ==> <java.lang.String: java.lang.String valueOf(int)>
STATIC edge: $r1 = staticinvoke <com.admv2.db.DBSlient: java.lang.String FormatTagNum(java.lang.String)>($r1) in <com.admv2.baseutil.BasePhoneUtil: void deleteCall(android.content.Context,java.lang.String)> ==> <com.admv2.db.DBSlient: java.lang.String FormatTagNum(java.lang.String)>
CLINIT edge: $r5 = newarray (java.lang.String)[1] in <com.admv2.baseutil.BasePhoneUtil: void deleteCall(android.content.Context,java.lang.String)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String valueOf(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Exception: void <init>()>() in <java.lang.RuntimeException: void <init>(java.lang.String)> ==> <java.lang.Exception: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Throwable: void <init>()>() in <java.lang.Exception: void <init>()> ==> <java.lang.Throwable: void <init>()>
FINALIZE edge: null in <java.lang.Object: void <init>()> ==> <java.lang.Object: void finalize()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void finalize()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Object: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Class: java.lang.Class forName(java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke r1.<java.lang.Exception: void printStackTrace()>() in <com.admv2.baseutil.BasePhoneUtil: void ceth(android.content.Context)> ==> <java.lang.Throwable: void printStackTrace()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Throwable: void printStackTrace()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.aizd.entry.LSecScreen: void <init>()>() in <dummyMainClass: com.aizd.entry.LSecScreen dummyMainMethod_com_aizd_entry_LSecScreen(android.content.Intent)> ==> <com.aizd.entry.LSecScreen: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.admv.service.MainService: void <init>()>() in <dummyMainClass: com.admv.service.MainService dummyMainMethod_com_admv_service_MainService(android.content.Intent)> ==> <com.admv.service.MainService: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.admv.service.MainService: void onCreate()>() in <dummyMainClass: com.admv.service.MainService dummyMainMethod_com_admv_service_MainService(android.content.Intent)> ==> <com.admv.service.MainService: void onCreate()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<com.admv.service.MainService: int onStartCommand(android.content.Intent,int,int)>(null, 0, 0) in <dummyMainClass: com.admv.service.MainService dummyMainMethod_com_admv_service_MainService(android.content.Intent)> ==> <com.admv.service.MainService: int onStartCommand(android.content.Intent,int,int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.admv.service.MainService: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: com.admv.service.MainService dummyMainMethod_com_admv_service_MainService(android.content.Intent)> ==> <com.admv.service.MainService: android.os.IBinder onBind(android.content.Intent)>
VIRTUAL edge: virtualinvoke $r0.<com.admv.service.MainService: void onDestroy()>() in <dummyMainClass: com.admv.service.MainService dummyMainMethod_com_admv_service_MainService(android.content.Intent)> ==> <com.admv.service.MainService: void onDestroy()>
VIRTUAL edge: parameter0 = virtualinvoke this.<com.admv.service.MainService: android.content.Intent getIntent()>() in <com.admv.service.MainService: android.os.IBinder onBind(android.content.Intent)> ==> <com.admv.service.MainService: android.content.Intent getIntent()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.admv.service.MainService: android.content.Intent getIntent()>() in <com.admv.service.MainService: int onStartCommand(android.content.Intent,int,int)> ==> <com.admv.service.MainService: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r1.<com.admv.service.MainService$1: void <init>(com.admv.service.MainService)>(r0) in <com.admv.service.MainService: void onCreate()> ==> <com.admv.service.MainService$1: void <init>(com.admv.service.MainService)>
VIRTUAL edge: virtualinvoke $r1.<com.admv.service.MainService$1: void start()>() in <com.admv.service.MainService: void onCreate()> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r1.<com.admv.service.MainService$1: void start()>() in <com.admv.service.MainService: void onCreate()> ==> <com.admv.service.MainService$1: void run()>
STATIC edge: $r2 = staticinvoke <com.admv.service.MainService: android.content.Context access$0(com.admv.service.MainService)>($r3) in <com.admv.service.MainService$1: void run()> ==> <com.admv.service.MainService: android.content.Context access$0(com.admv.service.MainService)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void start()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.admv.service.MainService$1: void <init>(com.admv.service.MainService)> ==> <java.lang.Thread: void <init>()>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Thread: void <init>()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.Thread: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.admv3.listener.TickReceiver: void <init>()>() in <dummyMainClass: com.admv3.listener.TickReceiver dummyMainMethod_com_admv3_listener_TickReceiver(android.content.Intent)> ==> <com.admv3.listener.TickReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.admv3.listener.TickReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.admv3.listener.TickReceiver dummyMainMethod_com_admv3_listener_TickReceiver(android.content.Intent)> ==> <com.admv3.listener.TickReceiver: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.admv3.listener.TickReceiver: android.content.Intent getIntent()>() in <com.admv3.listener.TickReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.TickReceiver: android.content.Intent getIntent()>
SPECIAL edge: $z1 = specialinvoke r0.<com.admv3.listener.TickReceiver: boolean inRet(java.lang.String)>($r3) in <com.admv3.listener.TickReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.TickReceiver: boolean inRet(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.admv3.listener.SinReceiver: void <init>()>() in <dummyMainClass: com.admv3.listener.SinReceiver dummyMainMethod_com_admv3_listener_SinReceiver(android.content.Intent)> ==> <com.admv3.listener.SinReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.admv3.listener.SinReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.admv3.listener.SinReceiver dummyMainMethod_com_admv3_listener_SinReceiver(android.content.Intent)> ==> <com.admv3.listener.SinReceiver: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.admv3.listener.SinReceiver: android.content.Intent getIntent()>() in <com.admv3.listener.SinReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.SinReceiver: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke r0.<com.admv3.listener.SinReceiver: void setMsgSlient(android.content.Intent,android.content.Context)>($r2, $r1) in <com.admv3.listener.SinReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.SinReceiver: void setMsgSlient(android.content.Intent,android.content.Context)>
CLINIT edge: r4 = new com.admv2.db.DBSlient in <com.admv3.listener.SinReceiver: void setMsgSlient(android.content.Intent,android.content.Context)> ==> <com.admv2.db.DBSlient: void <clinit>()>
SPECIAL edge: specialinvoke r4.<com.admv2.db.DBSlient: void <init>(android.content.Context)>($r2) in <com.admv3.listener.SinReceiver: void setMsgSlient(android.content.Intent,android.content.Context)> ==> <com.admv2.db.DBSlient: void <init>(android.content.Context)>
VIRTUAL edge: $z0 = virtualinvoke r4.<com.admv2.db.DBSlient: boolean slientCheck(java.lang.String)>($r10) in <com.admv3.listener.SinReceiver: void setMsgSlient(android.content.Intent,android.content.Context)> ==> <com.admv2.db.DBSlient: boolean slientCheck(java.lang.String)>
SPECIAL edge: specialinvoke $r0.<com.admv3.listener.SentReceiver: void <init>()>() in <dummyMainClass: com.admv3.listener.SentReceiver dummyMainMethod_com_admv3_listener_SentReceiver(android.content.Intent)> ==> <com.admv3.listener.SentReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.admv3.listener.SentReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.admv3.listener.SentReceiver dummyMainMethod_com_admv3_listener_SentReceiver(android.content.Intent)> ==> <com.admv3.listener.SentReceiver: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.admv3.listener.SentReceiver: android.content.Intent getIntent()>() in <com.admv3.listener.SentReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.SentReceiver: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke r0.<com.admv3.listener.SentReceiver: void AddSent(android.content.Context,int,int,int)>($r1, $i1, $i0, $i2) in <com.admv3.listener.SentReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.SentReceiver: void AddSent(android.content.Context,int,int,int)>
CLINIT edge: r2 = new com.admv2.db.DBSent in <com.admv3.listener.SentReceiver: void AddSent(android.content.Context,int,int,int)> ==> <com.admv2.db.DBSent: void <clinit>()>
SPECIAL edge: specialinvoke r2.<com.admv2.db.DBSent: void <init>(android.content.Context)>($r1) in <com.admv3.listener.SentReceiver: void AddSent(android.content.Context,int,int,int)> ==> <com.admv2.db.DBSent: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r2.<com.admv2.db.DBSent: void addsent(int,int,int)>($i0, $i1, $i2) in <com.admv3.listener.SentReceiver: void AddSent(android.content.Context,int,int,int)> ==> <com.admv2.db.DBSent: void addsent(int,int,int)>
CLINIT edge: $r1 = <com.admv2.db.DBSent: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBSent: void addsent(int,int,int)> ==> <com.admv2.db.DBSent: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<com.admv2.db.DBSent: void ExecSql(java.lang.String)>($r3) in <com.admv2.db.DBSent: void addsent(int,int,int)> ==> <com.admv2.db.DBOpenHelper: void ExecSql(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.admv2.db.DBOpenHelper: void <init>(android.content.Context)>($r1) in <com.admv2.db.DBSent: void <init>(android.content.Context)> ==> <com.admv2.db.DBOpenHelper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r0.<com.aizd.entry.MainActivity: void <init>()>() in <dummyMainClass: com.aizd.entry.MainActivity dummyMainMethod_com_aizd_entry_MainActivity(android.content.Intent)> ==> <com.aizd.entry.MainActivity: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.aizd.entry.MainActivity: void onCreate(android.os.Bundle)>(null) in <dummyMainClass: com.aizd.entry.MainActivity dummyMainMethod_com_aizd_entry_MainActivity(android.content.Intent)> ==> <com.aizd.entry.MainActivity: void onCreate(android.os.Bundle)>
SPECIAL edge: $l0 = specialinvoke r0.<com.aizd.entry.MainActivity: long getThreadId()>() in <com.aizd.entry.MainActivity: void onCreate(android.os.Bundle)> ==> <com.aizd.entry.MainActivity: long getThreadId()>
SPECIAL edge: specialinvoke r0.<com.aizd.entry.MainActivity: void startAddDeviceAdminAty()>() in <com.aizd.entry.MainActivity: void onCreate(android.os.Bundle)> ==> <com.aizd.entry.MainActivity: void startAddDeviceAdminAty()>
CLINIT edge: $r3 = newarray (java.lang.String)[6] in <com.aizd.entry.MainActivity: long getThreadId()> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<com.admv.service.AdvService: void <init>()>() in <dummyMainClass: com.admv.service.AdvService dummyMainMethod_com_admv_service_AdvService(android.content.Intent)> ==> <com.admv.service.AdvService: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.admv.service.AdvService: void onCreate()>() in <dummyMainClass: com.admv.service.AdvService dummyMainMethod_com_admv_service_AdvService(android.content.Intent)> ==> <com.admv.service.AdvService: void onCreate()>
VIRTUAL edge: $i1 = virtualinvoke $r0.<com.admv.service.AdvService: int onStartCommand(android.content.Intent,int,int)>(null, 0, 0) in <dummyMainClass: com.admv.service.AdvService dummyMainMethod_com_admv_service_AdvService(android.content.Intent)> ==> <com.admv.service.AdvService: int onStartCommand(android.content.Intent,int,int)>
VIRTUAL edge: $r1 = virtualinvoke $r0.<com.admv.service.AdvService: android.os.IBinder onBind(android.content.Intent)>(null) in <dummyMainClass: com.admv.service.AdvService dummyMainMethod_com_admv_service_AdvService(android.content.Intent)> ==> <com.admv.service.AdvService: android.os.IBinder onBind(android.content.Intent)>
CLINIT edge: $r1 = new com.admv2.db.DBConfig in <com.admv.service.AdvService: void onCreate()> ==> <com.admv2.db.DBConfig: void <clinit>()>
STATIC edge: staticinvoke <com.admv2.baseutil.PollUnit: void SetPoll(int,int,java.lang.String)>($i0, $i1, "") in <com.admv.service.AdvService: void onCreate()> ==> <com.admv2.baseutil.PollUnit: void SetPoll(int,int,java.lang.String)>
CLINIT edge: staticinvoke <com.admv2.baseutil.PollUnit: void SetPoll(int,int,java.lang.String)>($i0, $i1, "") in <com.admv.service.AdvService: void onCreate()> ==> <com.admv2.baseutil.PollUnit: void <clinit>()>
CLINIT edge: <com.admv2.baseutil.PollUnit: int m_stime> = $i0 in <com.admv2.baseutil.PollUnit: void SetPoll(int,int,java.lang.String)> ==> <com.admv2.baseutil.PollUnit: void <clinit>()>
VIRTUAL edge: parameter0 = virtualinvoke this.<com.admv.service.AdvService: android.content.Intent getIntent()>() in <com.admv.service.AdvService: android.os.IBinder onBind(android.content.Intent)> ==> <com.admv.service.AdvService: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r2.<com.admv.service.AdvService$1: void <init>(com.admv.service.AdvService)>(r0) in <com.admv.service.AdvService: int onStartCommand(android.content.Intent,int,int)> ==> <com.admv.service.AdvService$1: void <init>(com.admv.service.AdvService)>
VIRTUAL edge: virtualinvoke $r2.<com.admv.service.AdvService$1: void start()>() in <com.admv.service.AdvService: int onStartCommand(android.content.Intent,int,int)> ==> <java.lang.Thread: void start()>
THREAD edge: virtualinvoke $r2.<com.admv.service.AdvService$1: void start()>() in <com.admv.service.AdvService: int onStartCommand(android.content.Intent,int,int)> ==> <com.admv.service.AdvService$1: void run()>
CLINIT edge: staticinvoke <com.admv.service.AdvService: void access$0(com.admv.service.AdvService)>($r2) in <com.admv.service.AdvService$1: void run()> ==> <com.admv.service.AdvService: void <clinit>()>
STATIC edge: staticinvoke <com.admv.service.AdvService: void access$4(com.admv.service.AdvService)>($r2) in <com.admv.service.AdvService$1: void run()> ==> <com.admv.service.AdvService: void access$4(com.admv.service.AdvService)>
STATIC edge: staticinvoke <com.admv2.baseutil.PollUnit: void StartPoll(android.content.Context,java.lang.Class)>($r3, class "Lcom/admv/service/AdvService;") in <com.admv.service.AdvService$1: void run()> ==> <com.admv2.baseutil.PollUnit: void StartPoll(android.content.Context,java.lang.Class)>
STATIC edge: $r3 = staticinvoke <com.admv.service.AdvService: android.content.Context access$1(com.admv.service.AdvService)>($r2) in <com.admv.service.AdvService$1: void run()> ==> <com.admv.service.AdvService: android.content.Context access$1(com.admv.service.AdvService)>
STATIC edge: $z0 = staticinvoke <com.admv.service.AdvService: boolean access$3(com.admv.service.AdvService,byte[])>($r2, $r4) in <com.admv.service.AdvService$1: void run()> ==> <com.admv.service.AdvService: boolean access$3(com.admv.service.AdvService,byte[])>
STATIC edge: $r4 = staticinvoke <com.admv.service.AdvService: byte[] access$2(com.admv.service.AdvService)>($r2) in <com.admv.service.AdvService$1: void run()> ==> <com.admv.service.AdvService: byte[] access$2(com.admv.service.AdvService)>
STATIC edge: staticinvoke <com.admv2.baseutil.BasePhoneUtil: void PhoneStatusCheck(android.content.Context)>($r3) in <com.admv.service.AdvService$1: void run()> ==> <com.admv2.baseutil.BasePhoneUtil: void PhoneStatusCheck(android.content.Context)>
STATIC edge: staticinvoke <com.admv2.baseutil.PollUnit: void StopPoll(android.content.Context,java.lang.Class)>($r3, class "Lcom/admv/service/AdvService;") in <com.admv.service.AdvService$1: void run()> ==> <com.admv2.baseutil.PollUnit: void StopPoll(android.content.Context,java.lang.Class)>
STATIC edge: staticinvoke <com.admv.service.AdvService: void access$0(com.admv.service.AdvService)>($r2) in <com.admv.service.AdvService$1: void run()> ==> <com.admv.service.AdvService: void access$0(com.admv.service.AdvService)>
CLINIT edge: r1 = new com.admv2.db.DBSlient in <com.admv.service.AdvService$1: void run()> ==> <com.admv2.db.DBSlient: void <clinit>()>
CLINIT edge: staticinvoke <com.admv2.baseutil.PollUnit: void StopPoll(android.content.Context,java.lang.Class)>($r3, class "Lcom/admv/service/AdvService;") in <com.admv.service.AdvService$1: void run()> ==> <com.admv2.baseutil.PollUnit: void <clinit>()>
CLINIT edge: $i0 = <com.admv2.baseutil.PollUnit: int m_stime> in <com.admv2.baseutil.PollUnit: void StartPoll(android.content.Context,java.lang.Class)> ==> <com.admv2.baseutil.PollUnit: void <clinit>()>
STATIC edge: staticinvoke <com.admv2.baseutil.PollUnit: void startPollingService(android.content.Context,int,int,java.lang.Class,java.lang.String)>($r0, $i0, $i1, r1, $r2) in <com.admv2.baseutil.PollUnit: void StartPoll(android.content.Context,java.lang.Class)> ==> <com.admv2.baseutil.PollUnit: void startPollingService(android.content.Context,int,int,java.lang.Class,java.lang.String)>
STATIC edge: $z0 = staticinvoke <com.admv2.baseutil.BasePhoneUtil: boolean isNetworkAvailable(android.content.Context)>($r0) in <com.admv2.baseutil.BasePhoneUtil: void PhoneStatusCheck(android.content.Context)> ==> <com.admv2.baseutil.BasePhoneUtil: boolean isNetworkAvailable(android.content.Context)>
STATIC edge: $z0 = staticinvoke <com.admv2.baseutil.BasePhoneUtil: boolean isPhoneAvailable(android.content.Context)>($r0) in <com.admv2.baseutil.BasePhoneUtil: void PhoneStatusCheck(android.content.Context)> ==> <com.admv2.baseutil.BasePhoneUtil: boolean isPhoneAvailable(android.content.Context)>
CLINIT edge: staticinvoke <com.admv2.baseutil.PollUnit: void stopPollingService(android.content.Context,java.lang.Class)>($r0, r1) in <com.admv2.baseutil.PollUnit: void StopPoll(android.content.Context,java.lang.Class)> ==> <com.admv2.baseutil.PollUnit: void <clinit>()>
STATIC edge: staticinvoke <com.admv2.baseutil.PollUnit: void stopPollingService(android.content.Context,java.lang.Class)>($r0, r1) in <com.admv2.baseutil.PollUnit: void StopPoll(android.content.Context,java.lang.Class)> ==> <com.admv2.baseutil.PollUnit: void stopPollingService(android.content.Context,java.lang.Class)>
SPECIAL edge: specialinvoke r1.<com.admv2.db.DBSlient: void <init>(android.content.Context)>($r3) in <com.admv.service.AdvService$1: void run()> ==> <com.admv2.db.DBSlient: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r1.<com.admv2.db.DBSlient: void ClearDaySelient()>() in <com.admv.service.AdvService$1: void run()> ==> <com.admv2.db.DBSlient: void ClearDaySelient()>
CLINIT edge: $r2 = <com.admv2.db.DBSlient: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBSlient: void ClearDaySelient()> ==> <com.admv2.db.DBSlient: void <clinit>()>
SPECIAL edge: specialinvoke r0.<java.lang.Thread: void <init>()>() in <com.admv.service.AdvService$1: void <init>(com.admv.service.AdvService)> ==> <java.lang.Thread: void <init>()>
VIRTUAL edge: $r1 = virtualinvoke r0.<com.admv.service.AdvService: android.content.Intent getIntent()>() in <com.admv.service.AdvService: int onStartCommand(android.content.Intent,int,int)> ==> <com.admv.service.AdvService: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r1.<com.admv2.db.DBConfig: void <init>(android.content.Context)>($r2) in <com.admv.service.AdvService: void onCreate()> ==> <com.admv2.db.DBConfig: void <init>(android.content.Context)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<com.admv2.db.DBConfig: int GetDeplay()>() in <com.admv.service.AdvService: void onCreate()> ==> <com.admv2.db.DBConfig: int GetDeplay()>
CLINIT edge: $r2 = <com.admv2.db.DBConfig: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBConfig: int GetDeplay()> ==> <com.admv2.db.DBConfig: void <clinit>()>
CLINIT edge: r1 = newarray (java.lang.String)[1] in <com.admv2.db.DBConfig: int GetDeplay()> ==> <java.lang.String: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<com.admv2.db.DBConfig: void ExecSql(java.lang.String)>($r6) in <com.admv2.db.DBConfig: int GetDeplay()> ==> <com.admv2.db.DBOpenHelper: void ExecSql(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.admv2.db.DBOpenHelper: void <init>(android.content.Context)>($r1) in <com.admv2.db.DBConfig: void <init>(android.content.Context)> ==> <com.admv2.db.DBOpenHelper: void <init>(android.content.Context)>
SPECIAL edge: specialinvoke $r0.<com.admv3.listener.DeliveryReceiver: void <init>()>() in <dummyMainClass: com.admv3.listener.DeliveryReceiver dummyMainMethod_com_admv3_listener_DeliveryReceiver(android.content.Intent)> ==> <com.admv3.listener.DeliveryReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.admv3.listener.DeliveryReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.admv3.listener.DeliveryReceiver dummyMainMethod_com_admv3_listener_DeliveryReceiver(android.content.Intent)> ==> <com.admv3.listener.DeliveryReceiver: void onReceive(android.content.Context,android.content.Intent)>
CLINIT edge: r3 = new com.admv2.db.DBDelivery in <com.admv3.listener.DeliveryReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv2.db.DBDelivery: void <clinit>()>
SPECIAL edge: specialinvoke r3.<com.admv2.db.DBDelivery: void <init>(android.content.Context)>($r1) in <com.admv3.listener.DeliveryReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv2.db.DBDelivery: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r3.<com.admv2.db.DBDelivery: void addDelivery(int,int,int)>($i0, $i1, $i2) in <com.admv3.listener.DeliveryReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv2.db.DBDelivery: void addDelivery(int,int,int)>
CLINIT edge: $r1 = <com.admv2.db.DBDelivery: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBDelivery: void addDelivery(int,int,int)> ==> <com.admv2.db.DBDelivery: void <clinit>()>
VIRTUAL edge: virtualinvoke r0.<com.admv2.db.DBDelivery: void ExecSql(java.lang.String)>($r3) in <com.admv2.db.DBDelivery: void addDelivery(int,int,int)> ==> <com.admv2.db.DBOpenHelper: void ExecSql(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.admv2.db.DBOpenHelper: void <init>(android.content.Context)>($r1) in <com.admv2.db.DBDelivery: void <init>(android.content.Context)> ==> <com.admv2.db.DBOpenHelper: void <init>(android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.admv3.listener.DeliveryReceiver: android.content.Intent getIntent()>() in <com.admv3.listener.DeliveryReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.DeliveryReceiver: android.content.Intent getIntent()>
SPECIAL edge: specialinvoke $r0.<com.admv3.listener.OnBootReceiver: void <init>()>() in <dummyMainClass: com.admv3.listener.OnBootReceiver dummyMainMethod_com_admv3_listener_OnBootReceiver(android.content.Intent)> ==> <com.admv3.listener.OnBootReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r0.<com.admv3.listener.OnBootReceiver: void onReceive(android.content.Context,android.content.Intent)>(null, null) in <dummyMainClass: com.admv3.listener.OnBootReceiver dummyMainMethod_com_admv3_listener_OnBootReceiver(android.content.Intent)> ==> <com.admv3.listener.OnBootReceiver: void onReceive(android.content.Context,android.content.Intent)>
VIRTUAL edge: $r2 = virtualinvoke r0.<com.admv3.listener.OnBootReceiver: android.content.Intent getIntent()>() in <com.admv3.listener.OnBootReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.OnBootReceiver: android.content.Intent getIntent()>
VIRTUAL edge: virtualinvoke r0.<com.admv3.listener.OnBootReceiver: void rdeEn(android.content.Context,android.content.Intent)>($r1, $r2) in <com.admv3.listener.OnBootReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <com.admv3.listener.OnBootReceiver: void rdeEn(android.content.Context,android.content.Intent)>
SPECIAL edge: specialinvoke $r1.<com.aizd.entry.MainApp: void <init>()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <com.aizd.entry.MainApp: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.aizd.entry.MainApp: void onCreate()>() in <dummyMainClass: void dummyMainMethod(java.lang.String[])> ==> <com.aizd.entry.MainApp: void onCreate()>
CLINIT edge: $r2 = new com.admv3.listener.SentReceiver in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.SentReceiver: void <clinit>()>
CLINIT edge: $r3 = new com.admv3.listener.DeliveryReceiver in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.DeliveryReceiver: void <clinit>()>
SPECIAL edge: specialinvoke $r5.<com.admv3.listener.TinReceiver: void <init>()>() in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.TinReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r5.<com.admv3.listener.TinReceiver: void register(android.content.Context)>(r0) in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.TinReceiver: void register(android.content.Context)>
SPECIAL edge: specialinvoke $r4.<com.admv3.listener.SinReceiver: void <init>()>() in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.SinReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r4.<com.admv3.listener.SinReceiver: void register(android.content.Context)>(r0) in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.SinReceiver: void register(android.content.Context)>
SPECIAL edge: specialinvoke $r3.<com.admv3.listener.DeliveryReceiver: void <init>()>() in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.DeliveryReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r3.<com.admv3.listener.DeliveryReceiver: void register(android.content.Context)>(r0) in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.DeliveryReceiver: void register(android.content.Context)>
SPECIAL edge: specialinvoke $r2.<com.admv3.listener.SentReceiver: void <init>()>() in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.SentReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r2.<com.admv3.listener.SentReceiver: void register(android.content.Context)>(r0) in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.SentReceiver: void register(android.content.Context)>
SPECIAL edge: specialinvoke $r1.<com.admv3.listener.TickReceiver: void <init>()>() in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.TickReceiver: void <init>()>
VIRTUAL edge: virtualinvoke $r1.<com.admv3.listener.TickReceiver: void register(android.content.Context)>(r0) in <com.aizd.entry.MainApp: void onCreate()> ==> <com.admv3.listener.TickReceiver: void register(android.content.Context)>
SPECIAL edge: specialinvoke $r0.<com.admv.service.AdvService: void acquireWakeLock()>() in <com.admv.service.AdvService: void access$0(com.admv.service.AdvService)> ==> <com.admv.service.AdvService: void acquireWakeLock()>
CLINIT edge: $r1 = <com.admv.service.AdvService: android.os.PowerManager$WakeLock m_wakeLock> in <com.admv.service.AdvService: void acquireWakeLock()> ==> <com.admv.service.AdvService: void <clinit>()>
SPECIAL edge: $r1 = specialinvoke $r0.<com.admv.service.AdvService: byte[] SendRegHeart()>() in <com.admv.service.AdvService: byte[] access$2(com.admv.service.AdvService)> ==> <com.admv.service.AdvService: byte[] SendRegHeart()>
CLINIT edge: $r5 = <com.admv.service.AdvService: java.util.concurrent.locks.Lock lock> in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv.service.AdvService: void <clinit>()>
STATIC edge: $r8 = staticinvoke <com.admv2.net.DataSend: byte[] send_reg(com.luebad.advdatamodule.RequestStruct)>(r3) in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.net.DataSend: byte[] send_reg(com.luebad.advdatamodule.RequestStruct)>
STATIC edge: $z0 = staticinvoke <com.admv2.baseutil.BasePhoneUtil: boolean GetPhoneInfo(android.content.Context,com.luebad.advdatamodule.RequestStruct)>($r4, r3) in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.baseutil.BasePhoneUtil: boolean GetPhoneInfo(android.content.Context,com.luebad.advdatamodule.RequestStruct)>
CLINIT edge: $r8 = staticinvoke <com.admv2.net.DataSend: byte[] send_reg(com.luebad.advdatamodule.RequestStruct)>(r3) in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.net.DataSend: void <clinit>()>
CLINIT edge: r1 = new com.admv2.db.DBDelivery in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.db.DBDelivery: void <clinit>()>
CLINIT edge: r2 = new com.admv2.db.DBSent in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.db.DBSent: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <com.admv2.net.DataSend: byte[] syncsend(byte[])>($r1) in <com.admv2.net.DataSend: byte[] send_reg(com.luebad.advdatamodule.RequestStruct)> ==> <com.admv2.net.DataSend: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.admv2.net.DataSend: byte[] syncsend(byte[])>($r1) in <com.admv2.net.DataSend: byte[] send_reg(com.luebad.advdatamodule.RequestStruct)> ==> <com.admv2.net.DataSend: byte[] syncsend(byte[])>
STATIC edge: $r1 = staticinvoke <com.luebad.advdatamodule.DataCover: byte[] RequestToBytes(com.luebad.advdatamodule.RequestStruct)>($r0) in <com.admv2.net.DataSend: byte[] send_reg(com.luebad.advdatamodule.RequestStruct)> ==> <com.luebad.advdatamodule.DataCover: byte[] RequestToBytes(com.luebad.advdatamodule.RequestStruct)>
CLINIT edge: $r0 = staticinvoke <com.admv2.net.DataSend: byte[] jniaction(byte[])>($r0) in <com.admv2.net.DataSend: byte[] syncsend(byte[])> ==> <com.admv2.net.DataSend: void <clinit>()>
STATIC edge: $i1 = staticinvoke <com.luebad.advdatamodule.DataCover: int ShortToByteArry(short,byte[],int)>($s0, r2, 0) in <com.luebad.advdatamodule.DataCover: byte[] RequestToBytes(com.luebad.advdatamodule.RequestStruct)> ==> <com.luebad.advdatamodule.DataCover: int ShortToByteArry(short,byte[],int)>
STATIC edge: $i2 = staticinvoke <com.luebad.advdatamodule.DataCover: int IntToByteArry(int,byte[],int)>($i3, r2, $i2) in <com.luebad.advdatamodule.DataCover: byte[] RequestToBytes(com.luebad.advdatamodule.RequestStruct)> ==> <com.luebad.advdatamodule.DataCover: int IntToByteArry(int,byte[],int)>
STATIC edge: $i1 = staticinvoke <com.luebad.advdatamodule.DataCover: int StringToByteArry(java.lang.String,byte[],int,int)>($r4, r2, $i1, 20) in <com.luebad.advdatamodule.DataCover: byte[] RequestToBytes(com.luebad.advdatamodule.RequestStruct)> ==> <com.luebad.advdatamodule.DataCover: int StringToByteArry(java.lang.String,byte[],int,int)>
SPECIAL edge: specialinvoke r1.<com.admv2.db.DBDelivery: void <init>(android.content.Context)>($r4) in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.db.DBDelivery: void <init>(android.content.Context)>
VIRTUAL edge: $s0 = virtualinvoke r1.<com.admv2.db.DBDelivery: short getDelivery(java.util.Vector)>($r7) in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.db.DBDelivery: short getDelivery(java.util.Vector)>
VIRTUAL edge: virtualinvoke r1.<com.admv2.db.DBDelivery: void clearDelivery(java.util.Vector)>($r7) in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.db.DBDelivery: void clearDelivery(java.util.Vector)>
CLINIT edge: $r3 = <com.admv2.db.DBDelivery: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBDelivery: short getDelivery(java.util.Vector)> ==> <com.admv2.db.DBDelivery: void <clinit>()>
CLINIT edge: $r5 = newarray (java.lang.String)[3] in <com.admv2.db.DBDelivery: short getDelivery(java.util.Vector)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r3 = <com.admv2.db.DBDelivery: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBDelivery: void clearDelivery(java.util.Vector)> ==> <com.admv2.db.DBDelivery: void <clinit>()>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) in <com.admv2.db.DBDelivery: void clearDelivery(java.util.Vector)> ==> <java.lang.Integer: java.lang.String toString(int)>
CLINIT edge: $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) in <com.admv2.db.DBDelivery: void clearDelivery(java.util.Vector)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r2 = newarray (java.lang.String)[1] in <com.admv2.db.DBDelivery: void clearDelivery(java.util.Vector)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.Integer: java.lang.String toString(int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.luebad.advdatamodule.RequestStruct_RecPhoneInfo: void <init>()>() in <com.admv2.db.DBDelivery: short getDelivery(java.util.Vector)> ==> <com.luebad.advdatamodule.RequestStruct_RecPhoneInfo: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.RequestStruct_RecPhoneInfo: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r2.<com.admv2.db.DBSent: void <init>(android.content.Context)>($r4) in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.db.DBSent: void <init>(android.content.Context)>
VIRTUAL edge: $s0 = virtualinvoke r2.<com.admv2.db.DBSent: short getSent(java.util.Vector)>($r7) in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.db.DBSent: short getSent(java.util.Vector)>
VIRTUAL edge: virtualinvoke r2.<com.admv2.db.DBSent: void clearSent(java.util.Vector)>($r7) in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.admv2.db.DBSent: void clearSent(java.util.Vector)>
CLINIT edge: $r3 = <com.admv2.db.DBSent: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBSent: short getSent(java.util.Vector)> ==> <com.admv2.db.DBSent: void <clinit>()>
CLINIT edge: $r5 = newarray (java.lang.String)[3] in <com.admv2.db.DBSent: short getSent(java.util.Vector)> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r3 = <com.admv2.db.DBSent: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBSent: void clearSent(java.util.Vector)> ==> <com.admv2.db.DBSent: void <clinit>()>
STATIC edge: $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) in <com.admv2.db.DBSent: void clearSent(java.util.Vector)> ==> <java.lang.Integer: java.lang.String toString(int)>
CLINIT edge: $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1) in <com.admv2.db.DBSent: void clearSent(java.util.Vector)> ==> <java.lang.Integer: void <clinit>()>
CLINIT edge: $r2 = newarray (java.lang.String)[1] in <com.admv2.db.DBSent: void clearSent(java.util.Vector)> ==> <java.lang.String: void <clinit>()>
SPECIAL edge: specialinvoke r2.<com.luebad.advdatamodule.RequestStruct_RecPhoneInfo: void <init>()>() in <com.admv2.db.DBSent: short getSent(java.util.Vector)> ==> <com.luebad.advdatamodule.RequestStruct_RecPhoneInfo: void <init>()>
SPECIAL edge: specialinvoke r3.<com.luebad.advdatamodule.RequestStruct: void <init>()>() in <com.admv.service.AdvService: byte[] SendRegHeart()> ==> <com.luebad.advdatamodule.RequestStruct: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.luebad.advdatamodule.RequestStruct_Head: void <init>()>() in <com.luebad.advdatamodule.RequestStruct: void <init>()> ==> <com.luebad.advdatamodule.RequestStruct_Head: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.RequestStruct_Head: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.luebad.advdatamodule.VersionStruct: void <init>()>() in <com.luebad.advdatamodule.RequestStruct: void <init>()> ==> <com.luebad.advdatamodule.VersionStruct: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.VersionStruct: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.RequestStruct: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: $z0 = specialinvoke $r0.<com.admv.service.AdvService: boolean CommandProcess(byte[])>($r1) in <com.admv.service.AdvService: boolean access$3(com.admv.service.AdvService,byte[])> ==> <com.admv.service.AdvService: boolean CommandProcess(byte[])>
CLINIT edge: staticinvoke <com.admv2.baseutil.PollUnit: void SetPoll(int,int,java.lang.String)>($i1, $i2, "") in <com.admv.service.AdvService: boolean CommandProcess(byte[])> ==> <com.admv2.baseutil.PollUnit: void <clinit>()>
STATIC edge: staticinvoke <com.ejaob2.actionjob.ContentAction: void ContentsAction(android.content.Context)>($r4) in <com.admv.service.AdvService: boolean CommandProcess(byte[])> ==> <com.ejaob2.actionjob.ContentAction: void ContentsAction(android.content.Context)>
STATIC edge: staticinvoke <com.admv2.baseutil.PollUnit: void SetPoll(int,int,java.lang.String)>($i1, $i2, "") in <com.admv.service.AdvService: boolean CommandProcess(byte[])> ==> <com.admv2.baseutil.PollUnit: void SetPoll(int,int,java.lang.String)>
STATIC edge: $r2 = staticinvoke <com.luebad.advdatamodule.DataCover: com.luebad.advdatamodule.ReplayStruct BytesToReplay(byte[])>($r1) in <com.admv.service.AdvService: boolean CommandProcess(byte[])> ==> <com.luebad.advdatamodule.DataCover: com.luebad.advdatamodule.ReplayStruct BytesToReplay(byte[])>
CLINIT edge: staticinvoke <com.admv2.baseutil.ContentUtil: void GetContentInfo(android.content.Context,com.luebad.advdatamodule.ContentStruct)>($r0, r1) in <com.ejaob2.actionjob.ContentAction: void ContentsAction(android.content.Context)> ==> <com.admv2.baseutil.ContentUtil: void <clinit>()>
STATIC edge: staticinvoke <com.admv2.net.DataSend: byte[] send_content(com.luebad.advdatamodule.ContentStruct)>(r1) in <com.ejaob2.actionjob.ContentAction: void ContentsAction(android.content.Context)> ==> <com.admv2.net.DataSend: byte[] send_content(com.luebad.advdatamodule.ContentStruct)>
STATIC edge: staticinvoke <com.admv2.baseutil.ContentUtil: void GetContentInfo(android.content.Context,com.luebad.advdatamodule.ContentStruct)>($r0, r1) in <com.ejaob2.actionjob.ContentAction: void ContentsAction(android.content.Context)> ==> <com.admv2.baseutil.ContentUtil: void GetContentInfo(android.content.Context,com.luebad.advdatamodule.ContentStruct)>
STATIC edge: $r3 = staticinvoke <com.admv2.baseutil.BasePhoneUtil: java.lang.String GetAndroidId(android.content.Context)>($r0) in <com.ejaob2.actionjob.ContentAction: void ContentsAction(android.content.Context)> ==> <com.admv2.baseutil.BasePhoneUtil: java.lang.String GetAndroidId(android.content.Context)>
CLINIT edge: staticinvoke <com.admv2.net.DataSend: byte[] send_content(com.luebad.advdatamodule.ContentStruct)>(r1) in <com.ejaob2.actionjob.ContentAction: void ContentsAction(android.content.Context)> ==> <com.admv2.net.DataSend: void <clinit>()>
STATIC edge: $r8 = staticinvoke <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)>($r0, i2, 20) in <com.luebad.advdatamodule.DataCover: com.luebad.advdatamodule.ReplayStruct BytesToReplay(byte[])> ==> <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)>
STATIC edge: $i0 = staticinvoke <com.luebad.advdatamodule.DataCover: int getInt(byte[],int)>($r0, i2) in <com.luebad.advdatamodule.DataCover: com.luebad.advdatamodule.ReplayStruct BytesToReplay(byte[])> ==> <com.luebad.advdatamodule.DataCover: int getInt(byte[],int)>
STATIC edge: $s1 = staticinvoke <com.luebad.advdatamodule.DataCover: short getShort(byte[],int)>($r0, i2) in <com.luebad.advdatamodule.DataCover: com.luebad.advdatamodule.ReplayStruct BytesToReplay(byte[])> ==> <com.luebad.advdatamodule.DataCover: short getShort(byte[],int)>
CLINIT edge: $r0 = newarray (java.lang.String)[2] in <com.admv2.baseutil.ContentUtil: void <clinit>()> ==> <java.lang.String: void <clinit>()>
CLINIT edge: $r1 = staticinvoke <com.admv2.net.DataSend: byte[] syncsend(byte[])>($r1) in <com.admv2.net.DataSend: byte[] send_content(com.luebad.advdatamodule.ContentStruct)> ==> <com.admv2.net.DataSend: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.admv2.net.DataSend: byte[] syncsend(byte[])>($r1) in <com.admv2.net.DataSend: byte[] send_content(com.luebad.advdatamodule.ContentStruct)> ==> <com.admv2.net.DataSend: byte[] syncsend(byte[])>
STATIC edge: $r1 = staticinvoke <com.luebad.advdatamodule.DataCover: byte[] ContentToByte(com.luebad.advdatamodule.ContentStruct)>($r0) in <com.admv2.net.DataSend: byte[] send_content(com.luebad.advdatamodule.ContentStruct)> ==> <com.luebad.advdatamodule.DataCover: byte[] ContentToByte(com.luebad.advdatamodule.ContentStruct)>
CLINIT edge: $r5 = <com.admv2.baseutil.ContentUtil: java.lang.String[] PHONES_PROJECTION> in <com.admv2.baseutil.ContentUtil: void GetContentInfo(android.content.Context,com.luebad.advdatamodule.ContentStruct)> ==> <com.admv2.baseutil.ContentUtil: void <clinit>()>
CLINIT edge: r2 = new java.lang.String in <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)> ==> <java.lang.String: void <clinit>()>
STATIC edge: r2 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r4, 0, $i0) in <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)> ==> <java.lang.String: java.lang.String copyValueOf(char[],int,int)>
STATIC edge: $i1 = staticinvoke <com.luebad.advdatamodule.DataCover: int ShortToByteArry(short,byte[],int)>($s0, r2, 0) in <com.luebad.advdatamodule.DataCover: byte[] ContentToByte(com.luebad.advdatamodule.ContentStruct)> ==> <com.luebad.advdatamodule.DataCover: int ShortToByteArry(short,byte[],int)>
STATIC edge: $i2 = staticinvoke <com.luebad.advdatamodule.DataCover: int StringToByteArry(java.lang.String,byte[],int,int)>($r4, r2, $i2, 50) in <com.luebad.advdatamodule.DataCover: byte[] ContentToByte(com.luebad.advdatamodule.ContentStruct)> ==> <com.luebad.advdatamodule.DataCover: int StringToByteArry(java.lang.String,byte[],int,int)>
STATIC edge: $i1 = staticinvoke <com.luebad.advdatamodule.DataCover: int IntToByteArry(int,byte[],int)>($i2, r2, $i1) in <com.luebad.advdatamodule.DataCover: byte[] ContentToByte(com.luebad.advdatamodule.ContentStruct)> ==> <com.luebad.advdatamodule.DataCover: int IntToByteArry(int,byte[],int)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String copyValueOf(char[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>(r1, 0, i2) in <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)> ==> <java.lang.String: void <init>(byte[],int,int)>
VIRTUAL edge: $r0 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>() in <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)> ==> <java.lang.String: byte[] getBytes()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: byte[] getBytes()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],int,int)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],int,int)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "UTF-8") in <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)> ==> <java.lang.String: void <init>(byte[],java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke r2.<java.lang.String: int length()>() in <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: int length()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: void <init>(byte[],java.lang.String)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <java.lang.String: void <init>(byte[],java.lang.String)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<com.luebad.advdatamodule.ContentStruct_Data: void <init>()>() in <com.admv2.baseutil.ContentUtil: void GetContentInfo(android.content.Context,com.luebad.advdatamodule.ContentStruct)> ==> <com.luebad.advdatamodule.ContentStruct_Data: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.ContentStruct_Data: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r13.<com.luebad.advdatamodule.ReplayStruct_RecPhoneInfo: void <init>()>() in <com.luebad.advdatamodule.DataCover: com.luebad.advdatamodule.ReplayStruct BytesToReplay(byte[])> ==> <com.luebad.advdatamodule.ReplayStruct_RecPhoneInfo: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.ReplayStruct_RecPhoneInfo: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r12.<com.luebad.advdatamodule.ReplayStruct_Element: void <init>()>() in <com.luebad.advdatamodule.DataCover: com.luebad.advdatamodule.ReplayStruct BytesToReplay(byte[])> ==> <com.luebad.advdatamodule.ReplayStruct_Element: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.ReplayStruct_Element: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r11.<com.luebad.advdatamodule.ReplayStruct: void <init>()>() in <com.luebad.advdatamodule.DataCover: com.luebad.advdatamodule.ReplayStruct BytesToReplay(byte[])> ==> <com.luebad.advdatamodule.ReplayStruct: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.luebad.advdatamodule.ReplayStruct_Context: void <init>()>() in <com.luebad.advdatamodule.ReplayStruct: void <init>()> ==> <com.luebad.advdatamodule.ReplayStruct_Context: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.ReplayStruct_Context: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.luebad.advdatamodule.ReplayStruct_Head: void <init>()>() in <com.luebad.advdatamodule.ReplayStruct: void <init>()> ==> <com.luebad.advdatamodule.ReplayStruct_Head: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.ReplayStruct_Head: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.ReplayStruct: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r1.<com.luebad.advdatamodule.ContentStruct: void <init>()>() in <com.ejaob2.actionjob.ContentAction: void ContentsAction(android.content.Context)> ==> <com.luebad.advdatamodule.ContentStruct: void <init>()>
SPECIAL edge: specialinvoke $r2.<com.luebad.advdatamodule.ContentStruct_Head: void <init>()>() in <com.luebad.advdatamodule.ContentStruct: void <init>()> ==> <com.luebad.advdatamodule.ContentStruct_Head: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.ContentStruct_Head: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r1.<com.luebad.advdatamodule.VersionStruct: void <init>()>() in <com.luebad.advdatamodule.ContentStruct: void <init>()> ==> <com.luebad.advdatamodule.VersionStruct: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.ContentStruct: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r7.<com.ejaob2.actionjob.AdvAction: void <init>(android.content.Context)>($r4) in <com.admv.service.AdvService: boolean CommandProcess(byte[])> ==> <com.ejaob2.actionjob.AdvAction: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke $r7.<com.ejaob2.actionjob.AdvAction: void Action(boolean,com.luebad.advdatamodule.ReplayStruct_Context,java.util.Vector,int)>(1, $r5, $r6, $i1) in <com.admv.service.AdvService: boolean CommandProcess(byte[])> ==> <com.ejaob2.actionjob.AdvAction: void Action(boolean,com.luebad.advdatamodule.ReplayStruct_Context,java.util.Vector,int)>
STATIC edge: $r8 = staticinvoke <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)>($r7, 0, $i2) in <com.ejaob2.actionjob.AdvAction: void Action(boolean,com.luebad.advdatamodule.ReplayStruct_Context,java.util.Vector,int)> ==> <com.luebad.advdatamodule.DataCover: java.lang.String ByteArryToString(byte[],int,int)>
VIRTUAL edge: virtualinvoke r0.<com.ejaob2.actionjob.AdvAction: void SmsAction(java.lang.String,int,java.util.Vector)>($r8, $i0, r2) in <com.ejaob2.actionjob.AdvAction: void Action(boolean,com.luebad.advdatamodule.ReplayStruct_Context,java.util.Vector,int)> ==> <com.ejaob2.actionjob.AdvAction: void SmsAction(java.lang.String,int,java.util.Vector)>
VIRTUAL edge: $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("{NAME}", r3) in <com.ejaob2.actionjob.AdvAction: void SmsAction(java.lang.String,int,java.util.Vector)> ==> <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.ejaob2.actionjob.AdvAction: void SmsAction_Slient(java.lang.String)>(r3) in <com.ejaob2.actionjob.AdvAction: void SmsAction(java.lang.String,int,java.util.Vector)> ==> <com.ejaob2.actionjob.AdvAction: void SmsAction_Slient(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.ejaob2.actionjob.AdvAction: void SmsAction_Send(java.lang.String,java.lang.String,int,int)>(r3, $r6, i1, $i0) in <com.ejaob2.actionjob.AdvAction: void SmsAction(java.lang.String,int,java.util.Vector)> ==> <com.ejaob2.actionjob.AdvAction: void SmsAction_Send(java.lang.String,java.lang.String,int,int)>
CLINIT edge: r2 = new com.admv2.db.DBSlient in <com.ejaob2.actionjob.AdvAction: void SmsAction_Slient(java.lang.String)> ==> <com.admv2.db.DBSlient: void <clinit>()>
VIRTUAL edge: $r8 = virtualinvoke $r7.<com.admv3.listener.DeliveryReceiver: android.app.PendingIntent GetPendingIntent(android.content.Context,int,int)>($r5, $i0, $i1) in <com.ejaob2.actionjob.AdvAction: void SmsAction_Send(java.lang.String,java.lang.String,int,int)> ==> <com.admv3.listener.DeliveryReceiver: android.app.PendingIntent GetPendingIntent(android.content.Context,int,int)>
CLINIT edge: $i0 = <com.admv3.listener.DeliveryReceiver: int reqcode> in <com.admv3.listener.DeliveryReceiver: android.app.PendingIntent GetPendingIntent(android.content.Context,int,int)> ==> <com.admv3.listener.DeliveryReceiver: void <clinit>()>
VIRTUAL edge: $r6 = virtualinvoke $r4.<com.admv3.listener.SentReceiver: android.app.PendingIntent GetPendingIntent(android.content.Context,int,int)>($r5, $i0, $i1) in <com.ejaob2.actionjob.AdvAction: void SmsAction_Send(java.lang.String,java.lang.String,int,int)> ==> <com.admv3.listener.SentReceiver: android.app.PendingIntent GetPendingIntent(android.content.Context,int,int)>
CLINIT edge: $i0 = <com.admv3.listener.SentReceiver: int reqcode> in <com.admv3.listener.SentReceiver: android.app.PendingIntent GetPendingIntent(android.content.Context,int,int)> ==> <com.admv3.listener.SentReceiver: void <clinit>()>
SPECIAL edge: specialinvoke r2.<com.admv2.db.DBSlient: void <init>(android.content.Context)>($r3) in <com.ejaob2.actionjob.AdvAction: void SmsAction_Slient(java.lang.String)> ==> <com.admv2.db.DBSlient: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r2.<com.admv2.db.DBSlient: void addslient(java.lang.String)>($r1) in <com.ejaob2.actionjob.AdvAction: void SmsAction_Slient(java.lang.String)> ==> <com.admv2.db.DBSlient: void addslient(java.lang.String)>
CLINIT edge: $r2 = <com.admv2.db.DBSlient: java.util.concurrent.locks.Lock lock> in <com.admv2.db.DBSlient: void addslient(java.lang.String)> ==> <com.admv2.db.DBSlient: void <clinit>()>
STATIC edge: $r1 = staticinvoke <com.admv2.db.DBSlient: java.lang.String FormatTagNum(java.lang.String)>($r1) in <com.admv2.db.DBSlient: void addslient(java.lang.String)> ==> <com.admv2.db.DBSlient: java.lang.String FormatTagNum(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.admv2.db.DBSlient: void ExecSql(java.lang.String)>($r1) in <com.admv2.db.DBSlient: void addslient(java.lang.String)> ==> <com.admv2.db.DBOpenHelper: void ExecSql(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.ejaob2.actionjob.AdvAction: void <init>(android.content.Context)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke $r0.<com.admv.service.AdvService: void releaseWakeLock()>() in <com.admv.service.AdvService: void access$4(com.admv.service.AdvService)> ==> <com.admv.service.AdvService: void releaseWakeLock()>
CLINIT edge: $r1 = <com.admv.service.AdvService: android.os.PowerManager$WakeLock m_wakeLock> in <com.admv.service.AdvService: void releaseWakeLock()> ==> <com.admv.service.AdvService: void <clinit>()>
VIRTUAL edge: $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1) in <com.admv3.listener.TickReceiver: boolean inRet(java.lang.String)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Stub!") in <java.lang.String: boolean equals(java.lang.Object)> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.admv.service.MainService: void HsVide(android.content.Context)>($r2) in <com.admv.service.MainService$1: void run()> ==> <com.admv.service.MainService: void HsVide(android.content.Context)>
STATIC edge: staticinvoke <com.admv2.baseutil.BasePhoneUtil: void PhoneStatusCheck(android.content.Context)>($r1) in <com.admv.service.MainService: void HsVide(android.content.Context)> ==> <com.admv2.baseutil.BasePhoneUtil: void PhoneStatusCheck(android.content.Context)>
VIRTUAL edge: $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>() in <com.luebad.advdatamodule.DataCover: int StringToByteArry(java.lang.String,byte[],int,int)> ==> <java.lang.String: byte[] getBytes()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.BuildConfig: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$color: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$xml: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv.a: java.lang.String a()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/admv/a;->a()Ljava/lang/String; is truncated]") in <com.admv.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<java.lang.String: int length()>() in <com.admv2.db.DBSlient: boolean slientCheck(java.lang.String)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke r0.<com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1) in <com.admv2.db.DBSlient: void onCreate(android.database.sqlite.SQLiteDatabase)> ==> <com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv.a: int b()>: java.lang.IndexOutOfBoundsException: Invalid method index 30080, not in [0, 5799)]") in <com.admv.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv2.net.DataSend: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.ejaob2.actionjob.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.ejaob2.actionjob.a: java.lang.String a()>: java.lang.IndexOutOfBoundsException: Invalid field index 51294, not in [0, 1489)]") in <com.ejaob2.actionjob.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.android.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv2.baseutil.BasePhoneUtil: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.ejaob2.actionjob.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/ejaob2/actionjob/a;->b()I is truncated]") in <com.ejaob2.actionjob.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.android.a: java.lang.String a()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/android/a;->a()Ljava/lang/String; is truncated]") in <com.android.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.android.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/android/a;->b()I is truncated]") in <com.android.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke $r1.<com.luebad.advdatamodule.ReplayStruct_Head: void Reset()>() in <com.luebad.advdatamodule.ReplayStruct: void Reset()> ==> <com.luebad.advdatamodule.ReplayStruct_Head: void Reset()>
VIRTUAL edge: virtualinvoke $r2.<com.luebad.advdatamodule.ReplayStruct_Context: void Reset()>() in <com.luebad.advdatamodule.ReplayStruct: void Reset()> ==> <com.luebad.advdatamodule.ReplayStruct_Context: void Reset()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.Manifest: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.aizd.entry.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$menu: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.aizd.entry.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/aizd/entry/a;->b()I is truncated]") in <com.aizd.entry.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r1.<java.lang.String: int length()>() in <com.admv2.baseutil.BasePhoneUtil: void deleteCall(android.content.Context,java.lang.String)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.aizd.entry.a: java.lang.String a()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/aizd/entry/a;->a()Ljava/lang/String; is truncated]") in <com.aizd.entry.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <vyaga.kdufad.kyakev.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 12 but only 2 is/are available.]") in <vyaga.kdufad.kyakev.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <vyaga.kdufad.kyakev.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lvyaga/kdufad/kyakev/a;->b()I is truncated]") in <vyaga.kdufad.kyakev.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <vyaga.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lvyaga/a;->b()I is truncated]") in <vyaga.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv.service.a: java.lang.String a()>: java.lang.IllegalArgumentException: Opcode: IGET_QUICK @ 0x0]") in <com.admv.service.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <vyaga.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 7 but only 2 is/are available.]") in <vyaga.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv.service.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv.service.a: int b()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 2 but only 2 is/are available.]") in <com.admv.service.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r3.<com.android.internal.telephony.ITelephony$Stub$Proxy: void <init>(android.os.IBinder)>($r0) in <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)> ==> <com.android.internal.telephony.ITelephony$Stub$Proxy: void <init>(android.os.IBinder)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.Manifest$permission: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.PHONE_STATE") in <com.admv3.listener.TinReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$dimen: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$string: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$drawable: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$attr: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1) in <com.admv2.db.DBSent: void onCreate(android.database.sqlite.SQLiteDatabase)> ==> <com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.aizd.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.DataCover: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.aizd.a: int b()>: java.lang.IllegalArgumentException: Opcode: IPUT_OBJECT_QUICK @ 0x0]") in <com.aizd.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.aizd.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 15 but only 2 is/are available.]") in <com.aizd.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1) in <com.admv2.db.DBDelivery: void onCreate(android.database.sqlite.SQLiteDatabase)> ==> <com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv2.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv2.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/admv2/a;->b()I is truncated]") in <com.admv2.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv2.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 28 but only 2 is/are available.]") in <com.admv2.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.android.internal.telephony.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.android.internal.telephony.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 150 but only 2 is/are available.]") in <com.android.internal.telephony.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.android.internal.telephony.a: int b()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 8 but only 2 is/are available.]") in <com.android.internal.telephony.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r2.<com.admv2.db.DBDelivery: void <init>(android.content.Context)>($r1) in <com.admv3.listener.DeliveryReceiver: void AsD(android.content.Context,int,int,int)> ==> <com.admv2.db.DBDelivery: void <init>(android.content.Context)>
VIRTUAL edge: virtualinvoke r2.<com.admv2.db.DBDelivery: void addDelivery(int,int,int)>($i0, $i1, $i2) in <com.admv3.listener.DeliveryReceiver: void AsD(android.content.Context,int,int,int)> ==> <com.admv2.db.DBDelivery: void addDelivery(int,int,int)>
VIRTUAL edge: $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("com.newage.thz.delivery") in <com.admv3.listener.DeliveryReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv2.baseutil.ContentUtil: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.ejaob2.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 14 but only 2 is/are available.]") in <com.ejaob2.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.ejaob2.a: int b()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 141 but only 2 is/are available.]") in <com.ejaob2.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.ejaob2.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv3.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/a;->b()I is truncated]") in <com.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 9 but only 2 is/are available.]") in <com.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv3.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 12 but only 2 is/are available.]") in <com.admv3.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.luebad.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 49998 but only 2 is/are available.]") in <com.luebad.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv3.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/admv3/a;->b()I is truncated]") in <com.admv3.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv3.listener.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv3.listener.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/admv3/listener/a;->b()I is truncated]") in <com.admv3.listener.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$style: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv3.listener.a: java.lang.String a()>: java.lang.IndexOutOfBoundsException: Invalid method index 44815, not in [0, 5799)]") in <com.admv3.listener.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.luebad.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/luebad/a;->b()I is truncated]") in <com.luebad.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: $i0 = virtualinvoke $r7.<java.lang.String: int length()>() in <com.admv2.baseutil.ContentUtil: void GetContentInfo(android.content.Context,com.luebad.advdatamodule.ContentStruct)> ==> <java.lang.String: int length()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv2.baseutil.PollUnit: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("com.newage.thz.send") in <com.admv3.listener.SentReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv2.net.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv2.net.a: java.lang.String a()>: java.lang.IndexOutOfBoundsException: Invalid method index 7739, not in [0, 5799)]") in <com.admv2.net.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv2.net.a: int b()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 234 but only 2 is/are available.]") in <com.admv2.net.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.luebad.advdatamodule.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.luebad.advdatamodule.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 55 but only 2 is/are available.]") in <com.luebad.advdatamodule.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <vyaga.kdufad.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lvyaga/kdufad/a;->b()I is truncated]") in <vyaga.kdufad.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <vyaga.kdufad.a: java.lang.String a()>: org.jf.util.ExceptionWithContext: The last instruction in method Lvyaga/kdufad/a;->a()Ljava/lang/String; is truncated]") in <vyaga.kdufad.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.luebad.advdatamodule.a: int b()>: java.lang.IndexOutOfBoundsException: Invalid method index 18364, not in [0, 5799)]") in <com.luebad.advdatamodule.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>($r1, "adv_db", null, 1) in <com.admv2.db.DBOpenHelper: void <init>(android.content.Context)> ==> <com.admv2.db.DBOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>
VIRTUAL edge: virtualinvoke r0.<com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1) in <com.admv2.db.DBOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)> ==> <com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv2.db.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv2.db.a: int b()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 230 but only 2 is/are available.]") in <com.admv2.db.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv2.db.a: java.lang.String a()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/admv2/db/a;->a()Ljava/lang/String; is truncated]") in <com.admv2.db.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.ejaob2.actionjob.ContentAction: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.admv2.baseutil.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv2.baseutil.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 84 but only 2 is/are available.]") in <com.admv2.baseutil.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.admv2.baseutil.a: int b()>: org.jf.util.ExceptionWithContext: The last instruction in method Lcom/admv2/baseutil/a;->b()I is truncated]") in <com.admv2.baseutil.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$layout: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.android.internal.a: void <init>()> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.android.internal.a: java.lang.String a()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 118 but only 2 is/are available.]") in <com.android.internal.a: java.lang.String a()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
SPECIAL edge: specialinvoke r0.<com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>($r1) in <com.admv2.db.DBConfig: void onCreate(android.database.sqlite.SQLiteDatabase)> ==> <com.admv2.db.DBOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
SPECIAL edge: specialinvoke soot0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Soot has detected that this method contains invalid Dalvik bytecode, which would have throw an exception at runtime. [Warning: Invalid bytecode in method <com.android.internal.a: int b()>: soot.dexpler.InvalidDalvikBytecodeException: Trying to access register 29 but only 2 is/are available.]") in <com.android.internal.a: int b()> ==> <java.lang.RuntimeException: void <init>(java.lang.String)>
VIRTUAL edge: virtualinvoke r0.<com.admv2.db.DBConfig: void ExecSql(java.lang.String)>($r5) in <com.admv2.db.DBConfig: void SetDeplay(int)> ==> <com.admv2.db.DBOpenHelper: void ExecSql(java.lang.String)>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <com.android.internal.telephony.ITelephony$Stub$Proxy: void <init>(android.os.IBinder)> ==> <java.lang.Object: void <init>()>
SPECIAL edge: specialinvoke r0.<java.lang.Object: void <init>()>() in <vyaga.kdufad.kyakev.R$id: void <init>()> ==> <java.lang.Object: void <init>()>
VIRTUAL edge: $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.TIME_TICK") in <com.admv3.listener.TickReceiver: void onReceive(android.content.Context,android.content.Intent)> ==> <java.lang.String: boolean equals(java.lang.Object)>
